<?xml version="1.0" encoding="iso-8859-1"?>
<rss version="2.0"><channel><title>歪鱼</title><link>http://bb.yyu.me</link><description></description><lastBuildDate>Wed, 19 Mar 2014 01:49:58 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>&lt;h3&gt;&lt;font color="green"&gt;tornado tcp server&#27969;&#31243;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-10-08-1-tornado-tcp-server-logic</link><description>&lt;p&gt;tornado tcp server&#27969;&#31243;&lt;/p&gt;
&lt;p&gt;tornado&#38500;&#21435;&#22806;&#23618;httpserver&#30340;&#23553;&#35013;&#21518;, &#24213;&#19979;&#37117;&#26159;&#25945;&#32473;tcpserver, &#22240;&#27492;&#25165;&#21487;&#20197;&#24456;&#23481;&#26131;&#23558;http&#21327;&#35758;&#30340;tornado app&#25913;&#36896;&#25104;&#20860;&#23481;tcp&#21327;&#35758;&#30340;app.&lt;/p&gt;
&lt;p&gt;tcpserver&#30340;&#20351;&#29992;doc:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;        server = TCPServer()

        server.listen(8888)

        IOLoop.instance().start()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#21021;&#22987;&#21270;&#19968;&#20010;TCPServer&#23454;&#20363;,  &#22312;&#35843;&#29992;listen&#30340;&#26102;&#20505;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def listen(self, port, address=""):

    sockets = bind_sockets(port, address=address)

    self.add_sockets(sockets)



def add_sockets(self, sockets):

    if self.io_loop is None:

        self.io_loop = IOLoop.current()

    for sock in sockets:

        self._sockets[sock.fileno()] = sock

        add_accept_handler(sock, self._handle_connection,

                           io_loop=self.io_loop)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;listen&#26102;&#20351;&#29992;&#21019;&#24314;bind_sockets&#19968;&#20010;socket,  bind_sockets&#20027;&#35201;&#20570;&#19968;&#20123;sock&#30340;&#21021;&#22987;&#21270;, &#27604;&#22914;sock.setblocking,backlog,ipv4, ipv6&#31561;, &#36820;&#22238;&#19968;&#20010;&#21253;&#21547;socket&#23545;&#35937;&#30340;&#21015;&#34920;;&lt;/p&gt;
&lt;p&gt;socket&#30340;&#21015;&#34920;sockets,  &#20316;&#20026;&#21442;&#25968;&#32473;add_sockets,  add_sockets&#20250;&#21021;&#22987;&#21270;&#19968;&#20010;&#24403;&#21069;&#30340;ioloop,  &#26368;&#21518;&#20250;&#23558;&#36825;&#20123;socket, &#28155;&#21152;&#21040;add_accept_handler&#20869;,  add_accept_handler&#20989;&#25968;&#26159;&#22686;&#21152;&#19968;&#20010;ioloop&#30340;&#20107;&#20214;&#30417;&#21548;&#22120;,&#23427;&#26377;&#19968;&#20010;callback&#21442;&#25968;, &#29992;&#20110;&#22788;&#29702;&#30417;&#21548;&#21040;sock&#26377;&#26032;&#36830;&#25509;&#26102;, &#37325;&#35201;&#26159;&#35843;&#29992;add_accept_handler&#26102;, callback&#21442;&#25968;&#20256;&#30340;&#26159;tcpserver&#30340;self._handle_connection,&lt;/p&gt;
&lt;p&gt;add_accept_handler&#20250;&#22312;&#33258;&#24049;&#20989;&#25968;&#20869;&#37096;&#23450;&#20041;&#19968;&#20010;&#38381;&#21253;&#20989;&#25968;accept_handler, accept_handler&#25509;&#25910;fd, events,  &#36825;&#20010;&#20989;&#25968;&#20250;&#25346;&#27515;&#24490;&#29615;&#29992;&#26469;connection, address = sock.accept(), &#24471;&#21040;connection, address&#20316;&#20026;callback&#35843;&#29992;&#30340;&#21442;&#25968;, &lt;/p&gt;
&lt;p&gt;def add_accept_handler(sock, callback, io_loop=None):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if io_loop is None:

    io_loop = IOLoop.current()



def accept_handler(fd, events):

    while True:

        try:

            connection, address = sock.accept()

        except socket.error as e:

            if e.args[0] in (errno.EWOULDBLOCK, errno.EAGAIN):

                return

            raise

        callback(connection, address)

io_loop.add_handler(sock.fileno(), accept_handler, IOLoop.READ)  # &#22312;&#24403;&#21069;ioloop&#20013;&#27880;&#20876;&#19968;&#20010;&#32473;&#23450;&#20107;&#20214;&#30340;&#30417;&#21548;&#22788;&#29702;, &#24403;&#35302;&#21457;&#26102;, accept_handler&#23601;&#20250;&#34987;&#22238;&#35843;,  &#19968;&#36335;&#22238;&#28335;&#23601;&#20250;&#22238;&#35843;callback&#20989;&#25968;,  &#20063;&#23601;&#26159;tcpserver&#30340;self._handle_connection&#20989;&#25968;.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#20195;&#30721;&#20013;&#30340;&#25551;&#36848;&#26159;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    """Registers the given handler to receive the given events for fd.

    The ``events`` argument is a bitwise or of the constants

    ``IOLoop.READ``, ``IOLoop.WRITE``, and ``IOLoop.ERROR``.

    When an event occurs, ``handler(fd, events)`` will be run.

    """
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#22238;&#21040;&#26368;&#32456;&#34987;&#35843;&#29992;&#30340;_handle_connection&#20989;&#25968;, &#23427;&#23646;&#20110;tcpserver, &#35760;&#24471;&#20043;&#21069;&#30340;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;        server = TCPServer()

        server.listen(8888)

        IOLoop.instance().start()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#36825;&#37324;&#22312;IOLoop.instance().start()&#20043;&#21069;&#24212;&#35813;, &#26377;&#19968;&#21477; server.handle_stream = app &#30340;, &#36825;&#20010;app&#23601;&#26159;&#25105;&#20204;&#24212;&#29992;&#33258;&#24049;&#24819;&#25509;&#25910;&#21040;socket&#20256;&#36807;&#26469;&#30340;&#25968;&#25454;&#21518;, &#35201;&#20570;&#30340;&#19994;&#21153;&#36923;&#36753;&#20102;. &#19981;&#36807;&#25105;&#20204;&#23450;&#20041;&#30340;app&#20989;&#25968;, &#24212;&#35813;&#35201;&#26377;2&#20010;&#21442;&#25968;, &#20998;&#21035;&#26159;(stream, address), &#26159;&#29992;&#26469;&#25552;&#20379;&#32473;&#21518;&#26469;&#30340;iostream&#30340;,  &#36825;&#37324;&#25105;&#20204;&#30340;app&#20363;&#23376;&#26159;:&lt;/p&gt;
&lt;p&gt;def app(stream, address):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;callback = functools.partial(process, stream)

stream.read_until('\n', callback)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#22238;&#21040;tcpserver, &#22312;&#36890;&#36807;handle_stream=app&#20043;&#21518;, tcpserver&#30340;handle_stream&#24050;&#32463;&#34987;&#20989;&#25968;app&#26367;&#25442;&#20102;, &#23383;&#38754;&#24847;&#24605;&#23601;&#33021;&#30475;&#20986;&#26159;&#20026;&#20102;handl  &#21518;&#38754;&#30340;stream&#27969;&#30340;&#19968;&#20010;&#26041;&#27861;, &#22240;&#27492;&#37027;&#20010;app&#20989;&#25968;&#25165;&#19968;&#26679;&#38656;&#35201;stream, address&#36825;2&#20010;&#21442;&#25968;.&lt;/p&gt;
&lt;p&gt;&#21069;&#38754;&#35828;&#30340;_handle_connection&#20989;&#25968;&#26159;ioloop&#26816;&#27979;&#21040;&#23545;&#24212;&#20107;&#20214;&#21518;, &#26368;&#32456;&#30340;&#22238;&#35843;&#20989;&#25968;, &#37027;&#20040;_handle_connection&#20855;&#20307;&#24178;&#20102;&#20160;&#20040;&#21602;, &#30475;&#19979;&#38754;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def _handle_connection(self, connection, address):

    if self.ssl_options is not None:

        assert ssl, "Python 2.6+ and OpenSSL required for SSL"

        try:

            connection = ssl_wrap_socket(connection,

                                         self.ssl_options,

                                         server_side=True,

                                         do_handshake_on_connect=False)

        except ssl.SSLError as err:

            if err.args[0] == ssl.SSL_ERROR_EOF:

                return connection.close()

            else:

                raise

        except socket.error as err:

            if err.args[0] == errno.ECONNABORTED:

                return connection.close()

            else:

                raise

    try:

        if self.ssl_options is not None:

            stream = SSLIOStream(connection, io_loop=self.io_loop)

        else:

            stream = IOStream(connection, io_loop=self.io_loop)

        self.handle_stream(stream, address)

    except Exception:

        app_log.error("Error in connection callback", exc_info=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#39318;&#20808;&#20250;&#26816;&#27979;&#26159;&#21542;&#26377;&#20351;&#29992;ssl&#21327;&#35758;&#21152;&#23494;, &#21542;&#30340;&#35805;, &#25105;&#20204;&#23601;&#36339;&#36807;&#21069;&#38754;&#37027;&#19968;&#27573;&#20195;&#30721;&#20102;. &lt;/p&gt;
&lt;p&gt;&#21518;&#38754;&#30340;&#20195;&#30721;&#26159;&#21021;&#22987;&#21270;&#19968;&#20010;IOStream&#30340;&#23454;&#20363;,  &#23558;&#35843;&#29992;_handle_connection&#26102;&#32473;&#30340;connnection, &#21644;tcpserver&#30340;&#24403;&#21069;ioloop&#23545;&#35937;&#20316;&#20026;&#21442;&#25968;, &#21021;&#22987;&#21270;IOStream, &#28982;&#21518;&#23558;&#36825;&#20010;stream&#22238;&#20256;&#32473;hand_stream&#20063;&#23601;&#26159;&#25105;&#20204;&#30340;app&#20989;&#25968;&#22788;&#29702;,&lt;/p&gt;
&lt;p&gt;IOStream&#25552;&#20379;&#19968;&#20010;&#38750;&#38459;&#22622;&#30340;socket read&#26041;&#27861;,  &#25105;&#20204;&#32463;&#24120;&#20250;&#20351;&#29992;&#21040;&#23427;&#30340;read_until, &#23601;&#20687;&#21069;&#38754;&#25105;&#20204;&#30340;app&#20989;&#25968;&#26159;:&lt;/p&gt;
&lt;p&gt;def app(stream, address):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;callback = functools.partial(process, stream)

stream.read_until('\n', callback)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#20043;&#21518;&#30340;&#20107;&#24773;, &#37117;&#26159;&#23646;&#20110;&#19994;&#21153;&#36923;&#36753;process&#30340;&#20102;. &#26694;&#26550;&#37096;&#20998;&#24050;&#32463;&#22522;&#26412;&#23436;&#25104;,  &#38656;&#35201;&#27880;&#24847;&#30340;&#26159;process&#19994;&#21153;&#36923;&#36753;&#20063;&#38656;&#35201;&#25509;&#25910;stream&#20316;&#20026;&#19968;&#20010;&#21442;&#25968;, &#22240;&#20026;&#19994;&#21153;&#36923;&#36753;&#23436;&#25104;&#21518;, &#38656;&#35201;&#20351;&#29992;stream.write&#26041;&#27861;&#26469;&#23558;&#32467;&#26524;&#21457;&#36865;&#32473;&#23458;&#25143;&#31471;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-10-08-1-tornado-tcp-server-logic</guid><pubDate>Tue, 08 Oct 2013 08:21:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;hosts&#25991;&#20214;&#35299;&#26512;&#22495;&#21517;&#21040;&#22810;&#20010;IP&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-06-16-1-host-multi-dns</link><description>&lt;p&gt;&#20043;&#21069;&#19968;&#30452;&#20197;&#20026; hosts &#19981;&#25903;&#25345;&#25226;&#19968;&#20010;&#21517;&#23383;&#35299;&#26512;&#21040;&#22810;&#20010; IP&#65292;&#22240;&#27492;&#20961;&#26159;&#26377;&#35299;&#26512;&#21040;&#22810;&#20010; IP &#38656;&#27714;&#30340;&#22330;&#26223;&#65292;&#20840;&#37096;&#37117;&#20351;&#29992;&#20102; DNS&#65292;&#20598;&#28982;&#30475; host.conf &#30340; man page&#65292;&#21457;&#29616;&#24182;&#19981;&#26159;&#36825;&#26679;&#65292;&#26377;&#20123;&#22330;&#26223;&#19979;&#20173;&#28982;&#26159;&#21487;&#20197;&#20351;&#29992; hosts &#30340;&#12290;&lt;/p&gt;
&lt;p&gt;&#20351;&#29992; hosts &#35299;&#26512;&#26102;&#65292;resolver &#39034;&#24207;&#35835;&#21462; hosts &#25991;&#20214;&#65292;&#36820;&#22238;&#31532;&#19968;&#26465;&#21305;&#37197;&#35760;&#24405;&#23545;&#24212;&#30340; IP&#65292;&#36825;&#20063;&#26159;&#25105;&#20043;&#21069;&#23545; hosts &#30340;&#29702;&#35299;&#65292;&#27604;&#22914;&#23545;&#20110;&#36825;&#26679;&#30340; hosts &#25991;&#20214;:  &lt;/p&gt;
&lt;p&gt;1.1.1.1 host1&lt;/p&gt;
&lt;p&gt;1.1.1.2 host1&lt;/p&gt;
&lt;p&gt;ping host1 &#20250;&#30475;&#21040; 1.1.1.1 &#36825;&#20010; IP&#65292;&#20294;&#22914;&#26524;&#22312; /etc/host.conf &#20013;&#35774;&#32622; multi on&#65292;&#34429;&#28982; ping host1 &#20173;&#28982;&#21482;&#33021;&#30475;&#21040; 1.1.1.1 &#36825;&#20010; IP&#65292;&#20294; resolver &#20250;&#36820;&#22238; hosts &#20013;&#23545;&#24212;&#20110; host1 &#26465;&#30446;&#30340;&#25152;&#26377; IP&#65292;&#20197; Python &#20026;&#20363;&#65306;  &lt;/p&gt;
&lt;h5&gt;&amp;gt;&amp;gt;&amp;gt; socket.gethostbyname_ex('host1')&lt;/h5&gt;
&lt;p&gt;('host1', [], ['1.1.1.1', '1.1.1.2'])  &lt;/p&gt;
&lt;p&gt;&#33719;&#21462;&#21040;&#30340; IP &#21015;&#34920;&#39034;&#24207;&#21644; hosts &#20013;&#23450;&#20041;&#30340;&#39034;&#24207;&#19968;&#26679;&#65292;&#19988;&#26159;&#22266;&#23450;&#30340;&#65292;&#36825;&#19982; Round-robin DNS &#30340;&#34892;&#20026;&#20173;&#26377;&#21306;&#21035;&#65292;&#20294;&#22312;&#26377;&#20123;&#22330;&#26223;&#19979;&#20351;&#29992; hosts + &#25512;&#36865; + nscd &#21517;&#23383;&#32531;&#23384;&#21487;&#20197;&#33719;&#24471;&#30456;&#23545;&#20110; DNS &#26356;&#22909;&#30340;&#24635;&#20307;&#24615;&#33021;&#21644;&#31283;&#23450;&#24615;&#65292;&#27604;&#22914;doubanservice &#23458;&#25143;&#31471;&#33719;&#21462;&#26381;&#21153;&#22120;&#21015;&#34920;&#25110;&#35768;&#23601;&#21487;&#20197;&#25913;&#20026;&#20351;&#29992; hosts &#26367;&#25442; DNS&#65292;&#33719;&#24471;&#26356;&#22909;&#30340;&#24615;&#33021;&#65292;&#21516;&#26102;&#20063;&#35268;&#36991;&#20102;&#27604;&#22914; tinydns &#23545;&#19968;&#20010;&#21517;&#23383;&#26368;&#22810;&#21482;&#36820;&#22238; 8 &#20010; IP &#22320;&#22336;&#30340;&#38382;&#39064;&#12290;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-06-16-1-host-multi-dns</guid><pubDate>Sun, 16 Jun 2013 02:43:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#20116;&#19968;&#38543;&#32842;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-05-01-1-about-blog-and-hubot-nodejs</link><description>&lt;p&gt;&lt;img src='http://ww1.sinaimg.cn/large/793bee10jw1e47srugr8aj20e509sjsi.jpg'&gt;&lt;/p&gt;
&lt;p&gt;&#20116;&#19968;&#38750;&#24120;&#26080;&#32842;&#30340;&#22312;&#23478;&#21574;&#30528;, &#26368;&#36817;&#22312;google&#36164;&#26009;&#26102;, &#26597;&#21040;&#30340;&#19968;&#20123;&#25216;&#26415;blog, &#21457;&#29616;&#22909;&#22810;&#37117;&#22312;github&#37324;, &#20063;&#23601;&#26159;&#22909;&#22810;&#20154;&#37117;&#25226;github&#24403;&#20316;&#20445;&#23384;&#25216;&#26415;&#25991;&#31456;&#30340;&#30340;&#31649;&#29702;&#22120;, &#28982;&#21518;&#29992;&#27604;&#22914;Markdown&#31561;&#35821;&#27861;&#24418;&#24335;&#20889;, &#33258;&#24049;&#24324;&#20010;&#31616;&#21333;&#30340;&#31243;&#24207;&#35835;&#20986;&#26469;, &#23637;&#31034;&#23601;&#21487;&#20197;&#21464;&#25104;&#19968;&#20010;&#22522;&#26412;&#30340;blog&#31449;&#28857;&#20102;.&lt;br /&gt;
&#25105;&#30340;&#36825;&#20010;blog&#20063;&#26159;&#36825;&#20010;&#24847;&#24605;, https://github.com/liutaihua/yyu.me.git, &#20889;&#22909;&#30340;article&#25918;&#22312;post&#30446;&#24405;, &#19968;&#20010;tornado&#30340;web&#26694;&#26550;, &#35835;&#20986;&#36825;&#20123;article, &#21152;&#20010;html&#22260;&#32469;&#23601;&#21464;&#25104;&#29616;&#22312;&#36825;&#20010;&#26679;&#23376;&#20102;, &#19981;&#36807;&#25105;&#36824;&#32473;&#23427;&#22686;&#21152;&#20102;&#22312;&#32447;&#32534;&#36753;&#22120;, &#26159;&#19968;&#20010;Markdown&#35821;&#27861;&#30340;&#22312;&#32447;&#32534;&#36753;&#22120;, &#21487;&#20197;&#35797;&#35797;&#39044;&#35272;Markdown&#35821;&#27861;. &lt;br /&gt;
&#37492;&#20110;&#25105;&#27599;&#27425;&#21457;&#25991;&#31456;&#34429;&#28982;&#26159;&#36890;&#36807;&#22312;&#32447;&#32534;&#36753;&#22120;&#21457;&#30340;, &#20294;&#26159;&#23454;&#38469;&#25105;&#20889;&#23383;&#21364;&#26159;&#29992;&#21478;&#22806;&#19968;&#20010;Markdown&#32534;&#36753;&#22120;, &#36825;&#20010;&#22312;&#32447;editor&#21482;&#26159;copy&#36827;&#21435;, &#28982;&#21518;&#35774;&#23450;&#26631;&#39064;.&lt;br /&gt;
&#24819;&#21040;&#19968;&#20010;&#26356;&#31616;&#27905;&#28857;&#30340;&#26041;&#27861;, &#26377;&#26102;&#38388;&#23601;&#25226;&#23427;&#23454;&#29616;&#19968;&#19979;, &#23601;&#26159;&#22312;blog&#26381;&#21153;&#19978;&#20570;&#20010;api, &#25509;&#21463;post, &#28982;&#21518;&#24179;&#24120;&#22312;shell&#37324;&#29992;vim&#23601;&#21487;&#20197;&#20889;blog&#20102;, &#25226;&#20889;&#22909;&#30340;article&#20445;&#23384;, &#28982;&#21518;POST&#21040;&#36825;&#20010;api&#21363;&#21487;, &#36825;&#26679;&#20063;&#30465;&#24471;&#20877;&#27425;&#25171;&#24320;web&#32534;&#36753;&#22120;&#20102;. &lt;/p&gt;
&lt;p&gt;&#22270;&#37324;&#26426;&#22120;&#20154;&#26159;github&#26368;&#36817;&#24320;&#28304;&#30340;hubot, &#25402;&#19981;&#38169;. github&#24050;&#32463;&#29992;&#23427;&#26469;&#20570;&#36816;&#32500;&#20102;, &#20195;&#30721;&#21457;&#24067;&#31561;. &#25105;&#24819;&#26410;&#26469;&#36825;&#19981;&#22833;&#20026;&#19968;&#20010;&#36816;&#32500;&#30340;&#22909;&#26041;&#21521;, &#20256;&#32479;&#30340;&#26381;&#21153;monitor, &#21578;&#35686;, &#22312;&#23567;&#22411;&#20844;&#21496;&#22522;&#26412;&#23601;&#26159;&#29992;&#19968;&#20010;nagios&#35832;&#22914;&#27492;&#31867;&#30340;&#24320;&#28304;&#22871;&#20214;&#20570;&#21578;&#35686;, &#22522;&#26412;&#23601;&#37117;&#26159;&#22312;&#20351;&#29992;&#37038;&#20214;&#21457;&#36865;&#21578;&#35686;&#37038;&#20214;&#20102;. &#19981;&#36807;&#37038;&#20214;&#23454;&#26102;&#24615;&#31245;&#24046;, &#22914;&#26524;&#29992;robot, &#19981;&#22833;&#20026;&#19968;&#20010;&#22909;&#26041;&#27861;.&lt;br /&gt;
&#34429;&#28982;nodejs&#35821;&#27861;&#36319;js&#26377;&#25152;&#19981;&#21516;, &#19981;&#36807;&#30475;&#36215;&#26469;&#36824;&#25402;&#19981;&#38169;&#30340;, &#21487;&#33021;&#22240;&#20026;&#26368;&#36817;&#21018;&#30475;&#23436;&#19968;&#26412;&lt;javascript&#39640;&#32423;&#31243;&#24207;&#35774;&#35745;&gt;, js&#35821;&#27861;&#22522;&#26412;&#20102;&#35299;&#20102;&#19968;&#19979;. hubot&#22312;&#29992;nodejs&#20889;&#30340;&#26102;&#20505;, &#24456;&#22810;&#20989;&#25968;&#35843;&#29992;, &#21442;&#25968;&#37117;&#26377;&#19968;&#20010;callback, &#30495;&#26159;&#21508;&#31181;callback&#20256;&#26469;&#20256;&#21435;, &#21644;&#20197;&#21069;&#25509;&#35302;&#30340;&#30830;&#23454;&#26377;&#25152;&#21306;&#21035;, &#26377;&#28857;&#24847;&#24605;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-05-01-1-about-blog-and-hubot-nodejs</guid><pubDate>Wed, 01 May 2013 08:19:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;hubot&#22686;&#21152;announce&#26041;&#24335;&#20570;&#24191;&#25773;&#28040;&#24687;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-29-1-hubot-add-announce-method</link><description>&lt;p&gt;hubot&#30340;announce&#36890;&#30693;&#25152;&#26377;&#22312;&#32447;&#32852;&#31995;&#20154;&lt;/p&gt;
&lt;p&gt;hubot&#22312;&#20351;&#29992;&#25346;&#25509;&#21040;&#20854;&#20182;&#24179;&#21488;&#26102;, &#26159;&#25903;&#25345;room&#30340;&#26041;&#24335;&#20102;, &#36825;&#26679;&#23601;&#25903;&#25345;&#20102;&#30001;&#19968;&#20010;&#29992;&#25143;&#21457;&#36865;announce&#36890;&#30693;&#25152;&#26377;&#22312;&#32447;&#32852;&#31995;&#20154;&#30340;&#26041;&#24335;&#20102;.  &lt;/p&gt;
&lt;p&gt;&#22240;&#20026;&#24819;&#21040;&#20197;&#21518;&#25110;&#35768;&#21487;&#20197;&#20351;&#29992;hubot&#26469;&#20316;&#20026;&#30417;&#25511;&#36890;&#30693;, &#24403;&#20320;&#25351;&#23450;&#30340;&#30417;&#25511;&#39033;&#30446;&#21578;&#35686;&#26102;, &#20351;&#29992;hubot&#25226;&#20449;&#24687;&#21457;&#36865;&#21040;&#25152;&#26377;&#22312;&#32447;&#35746;&#38405;&#20154;.  &lt;/p&gt;
&lt;p&gt;&#22240;&#20026;&#23545;nodejs&#30340;&#36825;&#20010;coffee&#22522;&#26412;&#37117;&#36824;&#22312;&#30740;&#31350;&#38454;&#27573;, &#25152;&#20197;&#20197;&#19979;&#35828;&#30340;&#19981;&#33021;&#20195;&#34920;&#23436;&#20840;&#27809;&#38169;&#35823;, &#25110;&#26159;&#26368;&#20339;&#30340;&#21150;&#27861;..  &lt;/p&gt;
&lt;p&gt;robot&#23545;&#35937;&#26377;&#20010;robot.brain.data.users&#26041;&#27861;, &#20445;&#23384;&#30340;&#26159;&#24403;&#21069;&#30340;&#22312;&#32447;&#35746;&#38405;&#29992;&#25143;, &#21033;&#29992;&#36825;&#20010;, &#21487;&#20197;&#38543;&#24847;&#30340;&#23558;&#26576;&#26465;&#28040;&#24687;&#21457;&#36865;&#32473;&#25152;&#26377;&#20154;, &#36825;&#37324;&#20030;&#20363;&#26159;announce.py&#33050;&#26412;:  &lt;/p&gt;
&lt;pre&gt;

module.exports = (robot) -&gt;



  if process.env.HUBOT_ANNOUNCE_ROOMS

    allRooms = process.env.HUBOT_ANNOUNCE_ROOMS.split(',')

  else

    allRooms = []



  robot.respond /announce (.*)/i, (msg) -&gt;

    announcement = msg.match[1]

    for own key, user of robot.brain.data.users

      user_info = { user: user } # &#24635;&#20043;, &#20026;&#20102;&#21518;&#38754;robot&#21644;adapter&#30340;send&#26041;&#27861;&#35843;&#29992;, &#22810;&#21253;&#19968;&#23618;, &#21542;&#21017;send&#21462;user&#20250;&#21462;&#25104;undefined

      robot.send user_info, announcement 

&lt;/pre&gt;

&lt;p&gt;&#19978;&#38754;&#20351;&#29992;&#30340;robot.send&#26041;&#27861;&#21457;&#36865;&#28040;&#24687;,&#36825;&#20010;&#26041;&#27861;&#23450;&#20041;&#22312;src/robot.coffee&#37324;:  &lt;/p&gt;
&lt;pre&gt;

  send: (user, strings...) -&gt; 

    @adapter.send user, strings&#8230;  

&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#21487;&#20197;&#30475;&#20986;&#23427;&#23454;&#38469;&#26159;&#35843;&#29992;&#20320;&#21551;&#21160;hubot&#26102;&#25152;&#29992;&#30340;&#20855;&#20307;&#30340;adapter&#30340;send&#26041;&#27861;, &#36825;&#37324;&#25105;&#29992;&#30340;gtalk&#36825;&#20010;adapter, &#22240;&#27492;&#21487;&#20197;&#25214;&#21040;&#36825;&#20010;send&#26041;&#27861;&#26368;&#32456;&#23450;&#20041;&#22312;:  node_modules/hubot-gtalk/src/gtalk.coffee  &lt;/p&gt;
&lt;pre&gt;

  send: (envelope, strings...) -&gt;

    for str in strings

      message = new Xmpp.Element('message',

          from: @client.jid.toString()

          to: envelope.user.id

          type: if envelope.room then 'groupchat' else envelope.user.type

        ).

        c('body').t(str)

      # Send it off

      @client.send message

&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#19978;&#38754;&#20195;&#30721;&#20013;, &#20351;&#29992;&#30340;&#26159;envelope.user.id&#26469;&#33719;&#21462;&#29992;&#25143;id&#30340;, &#22240;&#27492;&#25165;&#38656;&#35201;&#22312;announce.coffee&#33050;&#26412;&#37324;, &#27604;&#36739;&#20667;&#24125;&#30340;&#22312;user&#22806;&#22312;&#21253;&#19968;&#23618;{ user: user }, &#21542;&#21017;&#22312;&#36825;&#37324;&#20351;&#29992;envelope.user.id&#23558;&#26080;&#27861;&#21462;&#21040;&#29992;&#25143;id(&#23601;&#26159;gmail&#37038;&#31665;&#22320;&#22336;), &#23548;&#33268;&#24191;&#25773;&#28040;&#24687;&#22833;&#36133;.  &lt;/p&gt;
&lt;p&gt;&#20110;&#36825;&#20010;send&#26041;&#27861;&#23545;&#24212;&#30340;, &#36824;&#26377;rely&#21644;messageRoom&#26041;&#27861;, &#20182;&#20204;&#22312;robot.coffee&#37324;&#23450;&#20041;&#26102;&#26368;&#32456;&#37117;&#26159;&#35843;&#29992;adapter.send&#26469;&#21457;&#36865;&#28040;&#24687;.  &lt;/p&gt;
&lt;p&gt;&#33267;&#20110;&#20197;&#21518;&#29992;&#20160;&#20040;client&#26041;&#24335;&#21457;&#36865;&#24191;&#25773;&#21578;&#35686;, &#31616;&#21333;&#30340;&#26041;&#27861;&#26159;:    &lt;/p&gt;
&lt;p&gt;1, &#20889;&#19968;&#20010;&#31616;&#21333;&#30340;xmpp&#21327;&#35758;(gtalk&#21327;&#35758;)&#30340;&#23567;sdk&#33050;&#26412;, &#36890;&#36807;&#23427;&#21457;&#36865;announce&#28040;&#24687;&#21040;hubot, &#28982;&#21518;hubot&#24191;&#25773;&#32473;&#25152;&#26377;&#20154;.&lt;br /&gt;
2, robot&#23545;&#35937;&#26377;&#19968;&#20010;&#38024;&#23545;http&#30340;&#26041;&#27861;, robot.router.post&#21487;&#20197;&#33719;&#21462;&#36890;&#36807;hubot&#30340;http&#25509;&#21475;post&#19978;&#26469;&#30340;&#25968;&#25454;, &#36825;&#26679;&#22914;&#26524;&#35201;&#21457;&#24067;announce, &#21482;&#38656;&#35201;post&#21040;&#36825;&#20010;&#26041;&#27861;&#19978;&#21363;&#21487;, &#20195;&#30721;&#22914;&#19979;:&lt;br /&gt;
&lt;pre&gt;
  robot.router.post "/broadcast/create", (req, res) -&amp;gt;
    for own key, user of robot.brain.data.users
      user_info = { user: user } 
      robot.send user_info, req.body.message
    res.end "Message Sent"
&lt;/pre&gt;&lt;br /&gt;
&#29992;&lt;code&gt;curl -X POST -d "message=opopop" http://hubot-server-ip:9898/broadcast/create&lt;/code&gt; &#27979;&#35797;&#30475;&#30475;&#21543;.&lt;/p&gt;
&lt;p&gt;&#23436;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-29-1-hubot-add-announce-method</guid><pubDate>Mon, 29 Apr 2013 11:40:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#20026;hubot&#26426;&#22120;&#20154;&#33050;&#26412;&#22686;&#21152;python&#25193;&#23637;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-27-1-hubot-nodejs-to-python-script</link><description>&lt;p&gt;&#20026;hubot&#26426;&#22120;&#20154;&#33050;&#26412;&#22686;&#21152;python&#25193;&#23637;&lt;/p&gt;
&lt;p&gt;&#26152;&#22825;&#39034;&#21033;&#25226;hubot&#36305;&#36215;&#26469;&#20102;, &#33021;&#22238;&#31572;&#20102;. &#20063;&#36890;&#36807;nodejs&#30340;exec&#21629;&#20196;&#25191;&#34892;shell&#30340;&#26041;&#24335;, &#23558;&#28040;&#24687;&#20197;&#21442;&#25968;&#30340;&#24418;&#24335;&#20256;&#32473;process.py&#22788;&#29702;, &#20197;&#24418;&#25104;&#29992;py&#20889;&#33050;&#26412;&#30340;&#24418;&#24335;.&lt;br /&gt;
&#19981;&#36807;&#19978;&#38754;&#26041;&#24335;&#26377;&#32570;&#38519;:&lt;br /&gt;
1, nodejs&#19981;&#26159;&#30495;&#27491;&#30340;&#35843;&#29992;py, &#21516;&#26102;py&#25191;&#34892;&#30340;&#36820;&#22238;&#25110;&#30452;&#25509;print&#25110;&#20889;stdout(print&#22312;&#26576;&#31181;&#31243;&#24230;&#19978;&#23601;&#26159;stdout), &#28982;&#21518;nodejs&#20160;&#20040;&#37117;&#19981;&#29992;&#24178;, &#23601;&#30452;&#25509;&#30456;&#24403;&#20110;&#25226;stdout&#20351;&#29992;msg.send&#22238;&#22797;&#32473;gtalk&#20102;.&lt;br /&gt;
2, &#25972;&#20307;&#32467;&#26500;&#19981;&#20248;&#32654;, nojs&#36319;py&#36824;&#24471;&#38752;exec&#25191;&#34892;shell&#30340;&#24418;&#24335;, &#36825;&#31181;&#35843;&#29992;&#26041;&#24335;&#25402;&#19985;&#38475;.  &lt;/p&gt;
&lt;p&gt;&#22312;github&#19978;&#25214;&#21040;&#19968;&#20010;&#33050;&#26412;, &#20063;&#26159;&#20026;&#20102;&#29992;python&#26469;&#20889;hubot&#30340;&#33050;&#26412;, &#23454;&#29616;&#26041;&#24335;&#20063;&#26159;&#29992;stdout&#21644;stdin&#32467;&#21512;, &#36798;&#21040;nodejs&#25910;&#21040;gtalk&#28040;&#24687;&#21518;, &#23558;&#28040;&#24687;&#20256;&#32473;py&#22788;&#29702;. &#25343;&#26469;&#21518;, &#21448;&#20570;&#20102;&#19968;&#20123;&#20462;&#25913;, &#20855;&#20307;&#36807;&#31243;&#26159;:  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; &#23553;&#35013;&#19968;&#20010;Python &#31867;, &#25509;&#25910;stdin, &#36755;&#20986;stdout.&lt;br /&gt;
&lt;/em&gt; &#22312;nodejs&#37324;&#21551;&#21160;&#36825;&#20010;py&#31867;&#30340;listen&#30417;&#21548;stdin, robot&#25910;&#21040;&#28040;&#24687;&#26102;write&#21040;stdin, &lt;br /&gt;
&lt;em&gt; py&#20174;stdin&#20013;&#35835;&#21040;&#28040;&#24687;, &#20132;&#32473;&#25351;&#23450;&#30340;handler&lt;br /&gt;
&lt;/em&gt; handler&#22788;&#29702;&#23436;&#25104;&#21518;, &#36755;&#20986;stdout, &#21516;&#26102;&#35302;&#21457;nodejs&#30340;event, &#35835;&#21462;stdout&#36890;&#36807;robot&#21457;&#36865;&#22238;&#39304;&#20449;&#24687;.  &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pyscript.coffee&#33050;&#26412;&#22914;&#19979;: 
&lt;pre&gt;
class PythonScript&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pyScriptPath = __dirname + '/test.py'
python_script = require('child_process').spawn('python', [pyScriptPath])
python_script.stdout.on 'data', (data) =&amp;gt;
    receive_from_python(data.toString())

module.exports = (robot) -&amp;gt;
    @robot = robot
    #robot.respond /(.*)/i, (msg) -&amp;gt;
    #    newRegex = new RegExp("^[@]?#{robot.name}[:,]? ?(.*)", 'i')
    #    match = newRegex.exec msg.message.text
    #    send_to_python(match[1], msg.message.room, 'respond')
    #    @robot.msg = msg

    robot.hear /(.*)/i, (msg) -&amp;gt;
        send_to_python(msg.message.text, msg.message.room, 'hear')
        @robot.msg = msg

send_to_python = (message, room, method) -&amp;gt;
    dict =
        type : method,
        message : message,
        room : room
    python_script.stdin.write(JSON.stringify(dict) + '\n')
    console.log JSON.stringify(dict)

receive_from_python = (json) -&amp;gt;
    data = JSON.parse(json)
    #@robot.messageRoom data.room, data.message # &#24694;&#24515;&#30340;&#38382;&#39064;, data.room&#22312;send_to_python&#35843;&#29992;&#20256;&#30340;&#21442;&#25968;msg.message.room&#26159;undefined, &#23548;&#33268;&#36825;&#37324;&#19981;&#33021;&#36825;&#26679;&#29992;
    @robot.msg.send data.message   # &#20110;&#26159;&#22312;&#20837;&#21475;&#30340;&#22320;&#26041;&#30452;&#25509;&#25226;msg&#23545;&#35937;&#36171;&#32473;@robot&#37324;&#30340;, &#22312;&#36825;&#37324;&#23601;&#33021;&#22840;&#20989;&#25968;&#35843;&#29992;msg.send&#20102;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/pre&gt;

&lt;p&gt;PythonScript&#31867;&#23553;&#35013;&#22914;&#19979;: hubot_script.py  &lt;/p&gt;
&lt;pre&gt;
handlers = [
    (r'/hubot/sys/(.*)', syscmdhandler),
    (r'/hubot/chat/(.*)', chathandler),
]

class HubotScript:
    def __init__(self):
        self.start_listening()

    # &#21019;&#24314;&#19968;&#20010;listen, &#30417;&#21548;&#26631;&#20934;&#36755;&#20837;, &#26377;&#36755;&#20837;&#26102;&#25191;&#34892;&#21518;&#38754;&#36923;&#36753;
    def start_listening(self):
        while True:
            line = sys.stdin.readline()
            self.receive(line)

    def receive(self, json_str):
        # &#36825;&#37324;&#19968;&#23450;&#38656;&#35201;&#25429;&#33719;&#38169;&#35823;, &#21542;&#21017;&#20986;&#38169;&#20250;&#30452;&#25509;&#36339;&#20986; start_listening&#20013;&#30340;&#24490;&#29615;, &#30417;&#21548;&#23601;&#32467;&#26463;&#20102;
        try:
            json_dict = json.loads(json_str)
            json_dict['message'] = '/' + '/'.join(json_dict['message'].split(' ')) # &#25630;&#25104;&#31867;&#20284;url&#30340;&#24418;&#24335;, &#26041;&#20415;handlers&#37324;&#30340;regex&#21305;&#37197;
            self.dispatch(json_dict)
        except Exception, e:
            print e

    def send(self, message):
        if message:
            #print json.dumps(message)
            sys.stdout.write(json.dumps(message) + '\n')
            sys.stdout.flush()

    # Message Dispatch
    def dispatch(self, json_dict):
        #msg_type = json_dict['type']
        #if msg_type == 'hear':
        #    self.dispatch_generic(json_dict, _hear_handlers)
        #elif msg_type == 'respond':
        #    self.dispatch_generic(json_dict, _resp_handlers)
        self.dispatch_generic(json_dict, handlers)

    def dispatch_generic(self, message, regexes):
        for regex, handler in regexes:
            p = re.match(regex, message['message'])
            if p:
                action = ' '.join(p.groups()[0].split('/'))
                response = message
                #response_text = handler(self, message)
                response_text = handler(self, action)
                if response_text:
                    if len(response_text) &gt; 3000: # nodejs&#30340;JSON.parse&#19981;&#33021;&#22788;&#29702;&#22826;&#38271;&#30340;str
                        response_text = response_text[:3000]
                    response['message'] = response_text
                    self.send(response)
def hear(regex): # &#27979;&#35797;&#29992;decorator
    def decorator(handler):
        handlers.append((regex, handler))
    return decorator
&lt;/pre&gt;

&lt;p&gt;&#38468;&#24102;&#19968;&#20010;&#27979;&#35797;&#31243;&#24207;, test.py:&lt;br /&gt;
&lt;pre&gt;
#coding=utf8
from hubot_script import *&lt;/p&gt;
&lt;p&gt;class TestScript(HubotScript):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@hear('def')
def test_handler(self, message):
    return 'hear'

#@respond('abc')
#def test_handlera(self, message):
#    return 'respond'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    test = TestScript()
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;
&#33267;&#27492;&lt;/strong&gt;
**&#25105;&#24050;&#32463;&#23558;hubot, gtalk, python&#38598;&#25104;&#21040;&#19968;&#36215;&#20102;, &#25105;&#30340;hubot&#30340;fork&#22312;&lt;br /&gt;
https://github.com/liutaihua/hubot.git
&#36816;&#34892;&#26041;&#24335;:&lt;br /&gt;
clone&#20043;&#21518;, &#39318;&#20808;&#36827;&#20837;hubot:&lt;br /&gt;
&lt;code&gt;cd hubot &amp;amp;&amp;amp; npm install&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&#28982;&#21518;&#24471;&#22312;&#36827;&#20837;node_modules/hubot-gtalk/&#20026;hubot-gtalk&#36825;&#20010;adapter&#23433;&#35013;&#20381;&#36182;:&lt;br /&gt;
&lt;code&gt;cd node_modules/hubot-gtalk/ &amp;amp;&amp;amp; npm install&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&#26368;&#21518;&#36816;&#34892;&lt;br /&gt;
&lt;code&gt;./bin/hubot -a gtalk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&#23436;.&lt;/strong&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-27-1-hubot-nodejs-to-python-script</guid><pubDate>Sat, 27 Apr 2013 13:33:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;nodejs&#30340;&#26426;&#22120;&#20154;hubot&#38598;&#25104;&#21040;gtalk&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-26-1-nodejs-hubot-robot</link><description>&lt;p&gt;hubot &#26426;&#22120;&#20154;, &#23621;&#28982;&#20170;&#22825;&#25165;&#21435;&#20102;&#35299;&#20102;&#19979;&#23427;, &#29992;nodejs&#36816;&#34892;, coffee javascrpit&#20889;&#30340;.  &lt;/p&gt;
&lt;p&gt;&#35760;&#24405;&#19979;&#23433;&#35013;&#26041;&#24335;&lt;br /&gt;
&#22914;&#26524;&#26159;redhat&#31995;&#21015;&#30340;linux, &#20351;&#29992;yum &#23433;&#35013;&#21363;&#21487;, centos6&#21518;&#30340;nodejs&#29256;&#26412;&#24050;&#32463;&#24456;&#26032;&#20102;.
&#23454;&#22312;&#19981;&#34892;&#23601;&#25630;&#28304;&#30721;&#23433;&#35013;.&lt;/p&gt;
&lt;p&gt;1, clone&#20195;&#30721;&lt;br /&gt;
    git clone https://github.com/github/hubot&lt;/p&gt;
&lt;p&gt;2, &#23433;&#35013;&#20381;&#36182;
    cd hubot &amp;amp;&amp;amp; npm install&lt;/p&gt;
&lt;p&gt;3, &#23581;&#35797;&#36816;&#34892;&lt;br /&gt;
    ./bin/hubot 
&#22312;&#20986;&#29616;&#30340;hubot&#30340;console &#36755;&#20837;hubot help&#30475;&#30475;&#24110;&#21161;&#21629;&#20196;&#21543;, &#36755;&#20837;pug me&#21629;&#20196;, &#22914;&#26524;&#27491;&#24120;&#20250;&#36820;&#22238;&#19968;&#20010;http&#38142;&#25509;, &#25171;&#24320;&#39029;&#38754;&#26159;&#20010;&#21487;&#29233;&#30340;&#29399;&#29399;.&lt;/p&gt;
&lt;p&gt;4,  &#23558;hubot&#21644;gtalk&#36830;&#25509;&lt;br /&gt;
&#29992;./bin/hubot -h&#21487;&#20197;&#30475;&#21040;&#24110;&#21161;, &#20854;&#20013;-a&#21442;&#25968;&#34920;&#31034;&#25351;&#23450;adapter&lt;br /&gt;
git clone git://github.com/atmos/hubot-gtalk.git &#33719;&#21462;gtalk&#30340;adapter&#20195;&#30721;, &#30452;&#25509;&#23558;hubot-gtalk&#25918;&#22312;hubot&#30340;node_modules&#19979;, &#26041;&#20415;hubot&#26597;&#25214;&#24211;.&lt;/p&gt;
&lt;p&gt;&#20851;&#20110;&#36830;&#25509;gtalk&#30340;&#25991;&#26723;, &#21487;&#20197;&#26597;&#30475;  https://github.com/github/hubot/wiki/Adapter:-Gtalk&lt;br /&gt;
&#20854;&#23454;&#24456;&#31616;&#21333;, &#35774;&#23450;2&#20010;&#31995;&#32479;&#29615;&#22659;&#21464;&#37327;: HUBOT_GTALK_USERNAME, HUBOT_GTALK_PASSWORD
&#25105;&#30340;&#20570;&#27861;&#38750;&#24120;&#26292;&#21147;, &#25105;&#30452;&#25509;&#32534;&#36753; node_modules/hubot-gtalk/src/gtalk.coffee  &#20462;&#25913;&lt;br /&gt;
    # Client Options
    @options =
      username: 'xxxxx@gmail.com'
      password: 'xxxxxxxxx'&lt;/p&gt;
&lt;p&gt;&#36824;&#26377;&#19968;&#20010;&#31995;&#32479;&#21464;&#37327;&#38656;&#35201;&#27880;&#24847;, hubot&#36816;&#34892;&#26102;,&#27604;&#22914;&#30452;&#25509;./bin/hubot -a shell&#40664;&#35748;&#20250;&#30417;&#21548;&#31471;&#21475;, &#32780;&#31471;&#21475;&#20540;&#20351;&#29992;&#30340;&#26159;&#29615;&#22659;&#21464;&#37327;PORT, &#40664;&#35748;&#26159;8080 ,&#22914;&#26524;&#34987;&#21344;&#29992;, hubot&#31243;&#24207;&#21551;&#21160;&#19981;&#20102;. &#25152;&#20197;&#35774;&#23450;&#19979; export PORT=8989&#20043;&#31867;&#30340;&#31471;&#21475;.  &lt;/p&gt;
&lt;p&gt;&#21069;&#38754;&#35828;&#36947;&#30340;gtalk&#36825;&#20010;adapter, &#28304;&#25991;&#20214;&#20854;&#23454;&#23601;&#26159;  node_modules/hubot-gtalk/src/gtalk.coffee, &#25105;&#22312;&#20351;&#29992;&#36807;&#31243;&#20013;&#21457;&#29616;, &#37324;&#38754;&#26377;&#20010;TextMessage&#20989;&#25968;&#22312;&#29992;&#21069;&#27809;&#26377;&#23548;&#20837;, &#20250;&#23548;&#33268;&#36816;&#34892;&#21518;, &#34429;&#28982;hubot&#33021;&#36830;&#25509;gtalk, &#20294;&#26159;&#26080;&#27861;&#21709;&#24212;&#20320;&#30340;&#28040;&#24687;,  &#31245;&#20316;&#20462;&#25913;(node_modules/hubot-gtalk/src/gtalk.coffee):  &lt;/p&gt;
&lt;p&gt;Adapter       = require '/root/app/hubot/src/adapter'
{TextMessage} = require '/root/app/hubot/src/message'&lt;/p&gt;
&lt;p&gt;&#21516;&#26102;&#20381;&#33899;&#30011;&#29922;, &#20889;&#20102;&#19968;&#20010;isAllowUser&#26041;&#27861;, &#29992;&#20110;&#39564;&#35777;&#29992;&#25143;, &#19981;&#33021;&#35841;&#37117;&#36992;&#35831;&#20320;&#36825;&#20010;hubot&#32842;&#22825;, &#28982;&#21518;&#23601;&#21521;hubot&#21457;&#21629;&#20196;&#21543;, &#22240;&#20026;&#25105;&#30340;hubot&#37324;&#20889;&#20102;&#19968;&#20123;&#31995;&#32479;&#30456;&#20851;&#30340;, &#24597;&#19981;&#23433;&#20840;.
user_list =
  'defage': 'admin'
  'liutaihua2008': 'user'  &lt;/p&gt;
&lt;p&gt;isAllowUser: (jid) -&amp;gt;
    name = jid.user
    if user_list[name] == undefined
      return false
    return true&lt;/p&gt;
&lt;p&gt;&#22312;handlePresence &#20989;&#25968;&#37324;&#35843;&#29992;&#19968;&#19979;, &#39564;&#35777;&#19981;&#36890;&#36807;&#23601;&#19981;&#36827;&#34892;&#21518;&#38754;&#30340;&#21160;&#20316;&#20102;&lt;br /&gt;
    if not @isAllowUser(jid)
      return&lt;/p&gt;
&lt;p&gt;5, &#25104;&#21151;&#36830;&#19978;gtalk&#20043;&#21518;, &#33021;&#29992;&#20102;, happy&#20102;&#19968;&#20250;, &#21487;&#26159;&#26426;&#22120;&#20154;&#27604;&#36739;&#20667;, &#25165;&#25026;&#31616;&#21333;&#30340;&#37027;&#20040;&#20960;&#20010;&#31034;&#20363;&#21629;&#20196;, &#19979;&#38754;&#26159;&#33258;&#24049;&#25193;&#23637;&#23427;&#30340;&#26041;&#27861;:&lt;br /&gt;
&#22312;src/scripts/&#36335;&#24452;&#19979;, &#26159;&#21629;&#20196;&#33050;&#26412;, &#38543;&#20415;&#25441;&#19968;&#20010;&#30475;&#19968;&#30524;, &#20250;&#21457;&#29616;&#25402;&#31616;&#21333;, &#33050;&#26412;&#37324;&#26377;&#19968;&#26465;&#27880;&#37322;, &#20250;&#34987;&#29992;&#20316;help&#21629;&#20196;&#30340;&#36755;&#20986;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;# Commands:&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;#   hubot email &amp;lt;user@email.com&amp;gt; -s &amp;lt;subject&amp;gt; -m &amp;lt;message&amp;gt; - Sends email with the &amp;lt;subject&amp;gt; &amp;lt;message&amp;gt; to address &amp;lt;user@email.com&amp;gt;&lt;/code&gt;
&#23601;&#26159;&#36825;&#34892;&#20102;, &#34429;&#28982;&#26159;&#27880;&#37322;, &#19981;&#36807;&#20250;&#34987;&#24403;&#20316;hubot help&#30340;&#36755;&#20986;.  &lt;/p&gt;
&lt;p&gt;&#26242;&#26102;&#25105;&#20462;&#25913;&#20102;&#33258;&#24102;&#30340;math.coffee,  &#35745;&#31639;&#22120;&#20040;, &#21407;&#26469;&#30340;&#23621;&#28982;&#36824;&#36305;&#21040;google&#19978;&#21435;&#26469;&#19968;&#36718;, &#28982;&#21518;&#35745;&#31639;&#22909;&#20102;&#36820;&#22238;, &#25918;&#30528;&#29616;&#25104;&#30340;eval&#24178;&#21527;&#19981;&#29992;, &#21361;&#38505;&#23601;&#21361;&#38505;. &#21453;&#27491;&#25105;&#26159;&#33258;&#24049;&#29992;.  &lt;/p&gt;
&lt;p&gt;&#22686;&#21152;&#20102;&#19968;&#20010;cmd.coffee &#25509;&#25910;&#28040;&#24687;&#37324;&#30340;&#21442;&#25968;, js&#25105;&#22826;&#33756;&#20102;, &#20110;&#26159;&#23601;&#29992;exec&#26041;&#27861;, &#25226;&#21629;&#20196;&#20840;&#37096;&#20002;&#32473;&#19968;&#20010;&#20889;&#22909;&#30340;process.py, &#28982;&#21518;&#22312;py&#37324;&#23601;&#21487;&#20197;&#24819;&#24178;&#21527;&#23601;&#24178;&#21527;&#20102;,  &#38656;&#35201;&#27880;&#24847;&#30340;&#26159;, js&#37324;&#35835;&#36755;&#20986;&#35835;&#30340;&#26159;stdout, &#22914;&#26524;stdout&#27809;&#19996;&#35199;, &#20351;&#29992;msg.send sdtout&#36820;&#22238;&#28040;&#24687;&#26102;, &#21487;&#33021;&#20250;&#26159;&#31354;&#30340;, &#21482;&#38656;&#35201;&#22312;process.py&#37324;&#31245;&#20570;&#27880;&#24847;&#21363;&#21487;.
&#19979;&#38754;&#26159;&#36825;&#20010;cmd.coffee&#33050;&#26412;&#20869;&#23481;:
&lt;pre&gt;
&lt;/code&gt;
 # Description:
 #   Email from hubot to any address
 #
 # Dependencies:
 #   None
 #
 # Configuration:
 #   None
 #
 # Commands:
 #   hubot email &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#64;&amp;#101;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#64;&amp;#101;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt; -s &lt;subject&gt; -m &lt;message&gt; - Sends email with the &lt;subject&gt; &lt;message&gt; to address &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#64;&amp;#101;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#64;&amp;#101;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
 #
 # Author:
 #   earlonrails
 #
 # Additional Requirements
 #   unix mail client installed on the system&lt;/p&gt;
&lt;p&gt;util = require 'util'
child_process = require 'child_process'
exec = child_process.exec&lt;/p&gt;
&lt;p&gt;module.exports = (robot) -&amp;gt;
  # email by pmail scripts
  robot.respond /email (.&lt;em&gt;) -s (.&lt;/em&gt;) -m (.*)/i, (msg) -&amp;gt;
    mailCommand = """python /root/app/hubot/src/scripts/pmail.py -t '#{msg.match[1]}' -s '#{msg.match[2]}' -c '#{msg.match[3]}'"""
    exec mailCommand, (error, stdout, stderr) -&amp;gt;
      msg.send stdout&lt;/p&gt;
&lt;p&gt;# &#25191;&#34892;&#31995;&#32479;&#21629;&#20196;
  robot.hear /cmd (.*)/i, (msg) -&amp;gt;
    if msg.match[1] == 'top'
      exec 'top -bn 1', (error, stdout, stderr) -&amp;gt;
        msg.send stdout
    exec msg.match[1], (error, stdout, stderr) -&amp;gt;
      msg.send stdout&lt;/p&gt;
&lt;p&gt;robot.hear /defage (.*)/i, (msg) -&amp;gt;
    #term   = "\"#{msg.match[1]}\""
    term = msg.match[1]
    cmd = """python /root/app/hubot/process.py --action '#{term}'"""
    exec cmd, (error, stdout, stderr) -&amp;gt;
      msg.send stdout&lt;/p&gt;
&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;robot.hear&#21644;robot.respond&#20284;&#20046;&#26159;&#19968;&#26679;&#30340;, &#19981;&#36807;robot.hear&#30475;&#36215;&#26469;&#26356;&#31526;&#21512;&#26426;&#22120;&#20154;&#32842;&#22825;.
&#25509;&#19979;&#26469;&#24590;&#20040;&#35843;&#25945;&#23427;, &#23601;&#30475;&#20320;&#24819;&#36825;&#20040;&#25630;&#20102;,  &#20197;&#21518;&#24819;&#21040;&#28857;&#22909;&#29609;&#30340;, &#20877;&#32473;&#23427;&#21152;&#19978;&#21543;. &#25105;&#30340;&#26426;&#22120;&#20154;&#26159; robotblabla@gmail.com&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-26-1-nodejs-hubot-robot</guid><pubDate>Fri, 26 Apr 2013 16:15:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#36827;&#31243;&#30340;smaps&#20869;&#23384;&#20351;&#29992;&#20998;&#26512;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-25-1-process-smaps-analysis</link><description>&lt;p&gt;2.6.16&#21518;&#30340;&#20869;&#26680;, &#23545;&#20110;&#26597;&#30475;&#36827;&#31243;&#20869;&#23384;&#20351;&#29992;&#20998;&#24067;, &#26356;&#26041;&#20415;&#20102;. &#22312;/proc/{pid} &#36335;&#24452;&#19979;&#26377;&#19968;&#20010;smaps&#25991;&#20214;, &#35760;&#24405;&#20102;&#36827;&#31243;&#20869;&#23384;&#20351;&#29992;&#24773;&#20917;, &#22312;&#32769;&#30340;&#20869;&#26680;&#31995;&#32479;&#19978;, &#36825;&#20010;&#25991;&#20214;&#26159;maps&#25110;memap , &#32780;&#19988;&#32769;&#30340;&#20869;&#26680;&#19979;maps&#25110;memap&#25991;&#20214;&#35760;&#24405;&#30340;&#25968;&#25454;&#30495;&#19981;&#26159;&#20154;&#35835;&#30340;.  &lt;/p&gt;
&lt;p&gt;&#29616;&#22312;&#26377;&#20102;&#39640;&#20869;&#26680;, &#24403;&#28982;&#21487;&#20197;&#29992;&#36215;&#26469;&#20102;.&lt;/p&gt;
&lt;p&gt;smaps&#25991;&#20214;&#20869;&#23481;&#26684;&#24335;&#26159;:
&lt;pre&gt;
&lt;code&gt;
7f4913d8f000-7f4913ddd000 r-xp 00000000 fd:00 791940                     /usr/local/boost149/lib/libboost_python.so.1.49.0
Size:                312 kB
Rss:                  20 kB
Pss:                   2 kB
Shared_Clean:         20 kB
Shared_Dirty:          0 kB
Private_Clean:         0 kB
Private_Dirty:         0 kB
Referenced:           20 kB
Anonymous:             0 kB
AnonHugePages:         0 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB
&lt;/code&gt;
&lt;/pre&gt;
size&#65306;  &#26159;&#36827;&#31243;&#20351;&#29992;&#20869;&#23384;&#31354;&#38388;&#65292;&#24182;&#19981;&#19968;&#23450;&#23454;&#38469;&#20998;&#37197;&#20102;&#29289;&#29702;&#20869;&#23384;&#65307;&lt;/p&gt;
&lt;p&gt;Rss&#65306;   "Resident Set Size"&#65292;&#23454;&#38469;&#39547;&#30041;"&#22312;&#20869;&#23384;&#20013;"&#30340;&#20869;&#23384;&#25968;. &#19981;&#21253;&#25324;&#24050;&#32463;&#20132;&#25442;&#20986;&#21435;&#30340;&#39029;&#38754;&#12290;RSS&#36824;&#21253;&#25324;&#20102;&#19982;&#20854;&#23427;&#36827;&#31243;&#20849;&#20139;&#30340;&#20869;&#23384;&#21306;&#22495;&#65292;&#36890;&#24120;&#29992;&#20110;&#20849;&#20139;&#24211;&#65307;&lt;/p&gt;
&lt;p&gt;Pss&#65306;   Private Rss&#65292; Rss&#20013;&#31169;&#26377;&#30340;&#20869;&#23384;&#39029;&#38754;&#65307;&lt;/p&gt;
&lt;p&gt;Shared_Clean&#65306;  Rss&#20013;&#21644;&#20854;&#20182;&#36827;&#31243;&#20849;&#20139;&#30340;&#26410;&#25913;&#20889;&#39029;&#38754;&#65307;&lt;/p&gt;
&lt;p&gt;Shared_Dirty&#65306;  Rss&#21644;&#20854;&#20182;&#36827;&#31243;&#20849;&#20139;&#30340;&#24050;&#25913;&#20889;&#39029;&#38754;&#65307;&lt;/p&gt;
&lt;p&gt;Private_Clean&#65306;  Rss&#20013;&#25913;&#20889;&#30340;&#31169;&#26377;&#39029;&#38754;&#39029;&#38754;&#65307;&lt;/p&gt;
&lt;p&gt;Private_Dirty&#65306;  Rss&#20013;&#24050;&#25913;&#20889;&#30340;&#31169;&#26377;&#39029;&#38754;&#39029;&#38754;&#65307;&lt;/p&gt;
&lt;p&gt;(&#20854;&#20013;Dirty&#39029;&#38754;&#22914;&#26524;&#27809;&#26377;&#20132;&#25442;&#26426;&#21046;&#30340;&#24773;&#20917;&#19979;&#65292;&#24212;&#35813;&#26159;&#19981;&#33021;&#22238;&#25910;&#30340;)&lt;/p&gt;
&lt;p&gt;&#32593;&#19978;&#26377;&#20161;&#20804;&#20351;&#29992;&#30340;&#36807;&#28388;&#20998;&#26512;&#27492;&#25991;&#20214;&#20869;&#23481;&#30340;perl&#33050;&#26412;, &#20511;&#26469;&#29992;:
&lt;pre&gt;
&lt;code&gt;&lt;/p&gt;
&lt;h1&gt;!/usr/bin/perl&lt;/h1&gt;
&lt;h1&gt;Copyright Ben Maurer&lt;/h1&gt;
&lt;h1&gt;you can distribute this under the MIT/X11 License&lt;/h1&gt;
&lt;p&gt;use Linux::Smaps;&lt;/p&gt;
&lt;p&gt;my $pid=shift @ARGV;
unless ($pid) {
 print "./smem.pl &lt;pid&gt;/n";
 exit 1;
}
my $map=Linux::Smaps-&amp;gt;new($pid);
my @VMAs = $map-&amp;gt;vmas;&lt;/p&gt;
&lt;p&gt;format STDOUT =
VMSIZE:  @######## kb
$map-&amp;gt;size
RSS:     @######## kb total
$map-&amp;gt;rss
         @######## kb shared
$map-&amp;gt;shared_clean + $map-&amp;gt;shared_dirty
         @######## kb private clean
$map-&amp;gt;private_clean
         @######## kb private dirty
$map-&amp;gt;private_dirty
.&lt;/p&gt;
&lt;p&gt;write;&lt;/p&gt;
&lt;p&gt;printPrivateMappings ();
printSharedMappings ();&lt;/p&gt;
&lt;p&gt;sub sharedMappings () {
    return grep { ($&lt;em&gt;-&amp;gt;shared_clean  + $&lt;/em&gt;-&amp;gt;shared_dirty) &amp;gt; 0 } @VMAs;
}&lt;/p&gt;
&lt;p&gt;sub privateMappings () {
    return grep { ($&lt;em&gt;-&amp;gt;private_clean  + $&lt;/em&gt;-&amp;gt;private_dirty) &amp;gt; 0 } @VMAs;
}&lt;/p&gt;
&lt;p&gt;sub printPrivateMappings ()
{
    $TYPE = "PRIVATE MAPPINGS";
    $^ = 'SECTION_HEADER';
    $~ = 'SECTION_ITEM';
    $- = 0;
    $= = 100000000;
    foreach  $vma (sort {-($a-&amp;gt;private_dirty &amp;lt;=&amp;gt; $b-&amp;gt;private_dirty)}
       privateMappings ()) {
 $size  = $vma-&amp;gt;size;
 $dirty = $vma-&amp;gt;private_dirty;
 $clean = $vma-&amp;gt;private_clean;
 $file  = $vma-&amp;gt;file_name;
 write;
    }
}&lt;/p&gt;
&lt;p&gt;sub printSharedMappings ()
{
    $TYPE = "SHARED MAPPINGS";
    $^ = 'SECTION_HEADER';
    $~ = 'SECTION_ITEM';
    $- = 0;
    $= = 100000000;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foreach  $vma (sort {-(($a-&amp;gt;shared_clean + $a-&amp;gt;shared_dirty)
  &amp;lt;=&amp;gt;
  ($b-&amp;gt;shared_clean + $b-&amp;gt;shared_dirty))}
 sharedMappings ()) {
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;$size  = $vma-&amp;gt;size;
 $dirty = $vma-&amp;gt;shared_dirty;
 $clean = $vma-&amp;gt;shared_clean;
 $file  = $vma-&amp;gt;file_name;
 write;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;format SECTION_HEADER =
@&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#60;&amp;#10;&amp;#36;&amp;#84;&amp;#89;&amp;#80;&amp;#69;&amp;#10;&amp;#64;"&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#10;&amp;#36;&amp;#84;&amp;#89;&amp;#80;&amp;#69;&amp;#10;&amp;#64;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; @&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;  @&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;   @&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
"vmsize" "rss clean" "rss dirty" "file"
.&lt;/p&gt;
&lt;p&gt;format SECTION_ITEM =
@####### kb @####### kb @####### kb   @&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
$size $clean $dirty $file
.&lt;/p&gt;
&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;
&#20351;&#29992;&#20043;&#21069;&#38656;&#35201;&#20808;&#23433;&#35013;Linux::Smaps&#27169;&#22359;:
perl -MCPAN -e 'install Linux::Smaps'&lt;/p&gt;
&lt;p&gt;&#20351;&#29992;&#20043;:
&lt;pre&gt;
&lt;code&gt;
[root@211 tmp]# perl p.pl 6490
VMSIZE:     835412 kb
RSS:        274928 kb total
              2880 kb shared
              8112 kb private clean
            263936 kb private dirty
PRIVATE MAPPINGS
     vmsize   rss clean   rss dirty   file
  406380 kb     7432 kb   258816 kb   [heap]
    6272 kb        0 kb     3612 kb
    4048 kb       28 kb      364 kb   /terminus/crown/bin/ares
     520 kb       56 kb      216 kb
     604 kb      112 kb      176 kb
     260 kb       20 kb      160 kb
     240 kb       32 kb      128 kb   /usr/lib64/libpython2.6.so.1.0
     260 kb       44 kb       92 kb
     772 kb      236 kb       44 kb
     224 kb        0 kb       44 kb   [stack]
      56 kb        8 kb       40 kb
      80 kb       20 kb       36 kb
      72 kb       12 kb       24 kb   /terminus/crown/bin/ares
     928 kb        0 kb       24 kb   /usr/lib64/libstdc++.so.6.0.13
   10240 kb        0 kb       20 kb
     132 kb        0 kb       16 kb
      20 kb        0 kb       16 kb
    1476 kb        0 kb       16 kb   /usr/lib64/libpython2.6.so.1.0
   10240 kb        0 kb       12 kb
   10240 kb        0 kb        8 kb
      16 kb        0 kb        8 kb   /usr/lib64/python2.6/lib-dynload/datetime.so
       8 kb        0 kb        8 kb   /usr/lib64/libstdc++.so.6.0.13
       4 kb        0 kb        4 kb   /usr/lib64/python2.6/lib-dynload/syslog.so
      16 kb       12 kb        4 kb   /lib64/libc-2.12.so
       4 kb        0 kb        4 kb   /lib64/libc-2.12.so
       4 kb        0 kb        4 kb   /lib64/libm-2.12.so
       4 kb        0 kb        4 kb   /lib64/libm-2.12.so
      28 kb       20 kb        4 kb   /usr/lib64/libstdc++.so.6.0.13
      84 kb        8 kb        4 kb
      92 kb        0 kb        4 kb   /lib64/libpthread-2.12.so
       4 kb        0 kb        4 kb   /lib64/libpthread-2.12.so
       4 kb        0 kb        4 kb   /lib64/libpthread-2.12.so
      16 kb        0 kb        4 kb
      12 kb        4 kb        4 kb   /usr/lib64/libcurl.so.4.1.1
     128 kb        0 kb        4 kb   /lib64/ld-2.12.so
       4 kb        0 kb        4 kb   /lib64/ld-2.12.so
       4 kb        4 kb        0 kb   /usr/lib64/python2.6/lib-dynload/_randommodule.so
       8 kb        8 kb        0 kb   /usr/lib64/python2.6/lib-dynload/timemodule.so
       4 kb        4 kb        0 kb   /usr/lib64/python2.6/lib-dynload/_functoolsmodule.so
       4 kb        4 kb        0 kb   /usr/lib64/python2.6/lib-dynload/_json.so
       4 kb        4 kb        0 kb   /lib64/librt-2.12.so
      16 kb        8 kb        0 kb   /usr/local/boost149/lib/libboost_python.so.1.49.0
       4 kb        4 kb        0 kb   /usr/local/boost149/lib/libboost_system.so.1.49.0
       8 kb        4 kb        0 kb   /usr/local/boost149/lib/libboost_thread.so.1.49.0
      16 kb       16 kb        0 kb   /usr/local/lib/libzmq.so.1.0.0
      12 kb        4 kb        0 kb
       4 kb        4 kb        0 kb   /lib64/ld-2.12.so
       4 kb        4 kb        0 kb&lt;/p&gt;
&lt;p&gt;SHARED MAPPINGS
     vmsize   rss clean   rss dirty   file
    4048 kb      948 kb        0 kb   /terminus/crown/bin/ares
    1476 kb      784 kb        0 kb   /usr/lib64/libpython2.6.so.1.0
    1576 kb      448 kb        0 kb   /lib64/libc-2.12.so
     324 kb      172 kb        0 kb   /usr/lib64/libcurl.so.4.1.1
     928 kb      160 kb        0 kb   /usr/lib64/libstdc++.so.6.0.13
     524 kb      104 kb        0 kb   /lib64/libm-2.12.so
     192 kb       76 kb        0 kb   /usr/local/lib/libzmq.so.1.0.0
      64 kb       32 kb        0 kb   /usr/lib64/python2.6/lib-dynload/datetime.so
      72 kb       28 kb        0 kb   /terminus/crown/bin/ares
      92 kb       28 kb        0 kb   /lib64/libpthread-2.12.so
     312 kb       20 kb        0 kb   /usr/local/boost149/lib/libboost_python.so.1.49.0
      12 kb       12 kb        0 kb   /usr/lib64/python2.6/lib-dynload/_json.so
      96 kb       12 kb        0 kb   /usr/local/boost149/lib/libboost_thread.so.1.49.0
     128 kb       12 kb        0 kb   /lib64/ld-2.12.so
       8 kb        8 kb        0 kb   /usr/lib64/python2.6/lib-dynload/syslog.so
      12 kb        8 kb        0 kb   /usr/lib64/python2.6/lib-dynload/_randommodule.so
      12 kb        8 kb        0 kb   /usr/lib64/python2.6/lib-dynload/timemodule.so
       8 kb        8 kb        0 kb   /usr/lib64/python2.6/lib-dynload/_functoolsmodule.so
      28 kb        4 kb        0 kb   /lib64/librt-2.12.so
       8 kb        4 kb        0 kb   /usr/local/boost149/lib/libboost_system.so.1.49.0
       4 kb        4 kb        0 kb   [vdso]&lt;/p&gt;
&lt;p&gt;&lt;/pre&gt;
&lt;/code&gt;
&#20174;&#19978;&#38754;&#30475;&#21040;rss&#22823;&#23567;&#34987;&#20998;&#25104;&#20102;&#20004;&#20010;&#37096;&#20998;: private(&#31169;&#26377;)&#21644;shared(&#20849;&#20139;).
private rss&#23601;&#26159;&#25105;&#20204;&#26368;&#20851;&#24515;&#30340;&#36827;&#31243;&#23454;&#38469;&#21344;&#29992;&#30340;&#20869;&#23384;&#25968;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-25-1-process-smaps-analysis</guid><pubDate>Thu, 25 Apr 2013 16:09:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;tornado&#28304;&#30721;&#26597;&#30475;-&#20195;&#30721;&#32467;&#26500;&#21644;&#35831;&#27714;&#27969;&#21521;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-18-4-tornado-code-source-structure</link><description>&lt;p&gt;&#28304;&#30721;&#37324;&#30340;&#32467;&#26500;:
&lt;pre&gt;
&lt;code&gt;
tornado
&#9500;&#9472;&#9472; auth.py
&#9500;&#9472;&#9472; autoreload.py
&#9500;&#9472;&#9472; ca-certificates.crt
&#9500;&#9472;&#9472; curl_httpclient.py
&#9500;&#9472;&#9472; database.py
&#9500;&#9472;&#9472; escape.py
&#9500;&#9472;&#9472; gen.py
&#9500;&#9472;&#9472; httpclient.py
&#9500;&#9472;&#9472; httpserver.py
&#9500;&#9472;&#9472; httputil.py
&#9500;&#9472;&#9472; &lt;strong&gt;init&lt;/strong&gt;.py
&#9500;&#9472;&#9472; ioloop.py
&#9500;&#9472;&#9472; iostream.py
&#9500;&#9472;&#9472; locale.py
&#9500;&#9472;&#9472; netutil.py
&#9500;&#9472;&#9472; options.py
&#9500;&#9472;&#9472; platform
&#9474;   &#9500;&#9472;&#9472; auto.py
&#9474;   &#9500;&#9472;&#9472; common.py
&#9474;   &#9500;&#9472;&#9472; &lt;strong&gt;init&lt;/strong&gt;.py
&#9474;   &#9500;&#9472;&#9472; interface.py
&#9474;   &#9500;&#9472;&#9472; posix.py
&#9474;   &#9500;&#9472;&#9472; twisted.py
&#9474;   &#9500;&#9472;&#9472; windows.py
&#9500;&#9472;&#9472; process.py
&#9500;&#9472;&#9472; simple_httpclient.py
&#9500;&#9472;&#9472; stack_context.py
&#9500;&#9472;&#9472; template.py
&#9474;   &#9500;&#9472;&#9472; csv_translations
&#9474;   &#9474;   &#9492;&#9472;&#9472; fr_FR.csv
&#9474;   &#9500;&#9472;&#9472; gettext_translations
&#9474;   &#9474;   &#9492;&#9472;&#9472; fr_FR
&#9474;   &#9474;       &#9492;&#9472;&#9472; LC_MESSAGES
&#9474;   &#9500;&#9472;&#9472; &lt;strong&gt;init&lt;/strong&gt;.py
&#9474;   &#9500;&#9472;&#9472; README
&#9474;   &#9500;&#9472;&#9472; static
&#9474;   &#9474;   &#9492;&#9472;&#9472; robots.txt
&#9474;   &#9500;&#9472;&#9472; templates
&#9474;   &#9474;   &#9492;&#9472;&#9472; utf8.html
&#9500;&#9472;&#9472; util.py
&#9500;&#9472;&#9472; web.py
&#9500;&#9472;&#9472; web.py~
&#9500;&#9472;&#9472; websocket.py
&#9500;&#9472;&#9472; wsgi.py
&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&#33457;&#20102;&#19968;&#20123;&#26102;&#38388;,&#20934;&#22791;&#30475;tornado&#30340;&#28304;&#30721;, &#19979;&#21320;&#21482;&#30475;&#20102;&#37096;&#20998;http&#30456;&#20851;&#30340;, &#32467;&#26500;&#29702;&#20986;&#26469;, google&#20102;&#37096;&#20998;&#36164;&#26009;, &#28982;&#21518;&#33258;&#24049;&#29702;&#20102;&#29702;&#24605;&#32500;, &#21457;&#29616;&#33258;&#24049;&#29702;&#35299;&#22522;&#26412;&#26159;&#23545;&#30340;, &#22312;http://ispe54.blogspot.com/2013/04/tornado-1.html&#36825;&#31687;&#25991;&#31456;&#29702;&#35299;&#19979;&#26356;&#21152;&#28165;&#26224;&#20102;. &lt;/p&gt;
&lt;p&gt;&#30001;&#31616;&#21333;&#30340;hello world&#31243;&#24207;&#24320;&#22987;, &#30475;&#36827;&#21435;&#28304;&#30721;:&lt;/p&gt;
&lt;p&gt;class MainHandler(tornado.web.RequestHandler):
    def get(self):
         return self.finish('hello world')&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
\#&#21021;&#22987;&#21270;&#19968;&#20010;application&#31867;&#30340;&#23454;&#20363;
class Application(tornado.web.Application):
    def __init__(self):
        handlers.append((r'/', MainHandler))
        tornado.web.Application.__init__(self, handlers, **config.web_config.settings)
        self.session_manager = common.session.TornadoSessionManager(config.web_config.settings["session_secret"],
            config.web_config.settings["session_dir"])
        self.db = common.util.get_user_db()
        &#8230;.

def main():
    http_server = tornado.httpserver.HTTPServer(Application(), xheaders=True)
    http_server.listen(8888)
    tornado.ioloop.IOLoop.instance().start() 

&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1, &#20808;&#35828;Application&#31867;, &#23427;&#21644;RequestHandler&#21516;&#26102;&#20301;&#20110;tornado.web&#27169;&#22359;&#20869;,  &#23427;&#24635;&#20849;&#27809;&#22810;&#23569;&#20195;&#30721;, 
    Application&#20027;&#35201;&#26159;&#21021;&#22987;&#21270;&#19968;&#20123;option.settings&#30340;&#21442;&#25968;,  &#23558;&#23454;&#20363;&#20195;&#30721;&#20013;&#30340;handlers&#21152;&#20837;&#21040;self.handlers&#20013;, &#26368;&#21518;&#37325;&#20889;&#20102;&lt;strong&gt;call&lt;/strong&gt;&#20989;&#25968;, &#22312;&#21518;&#38754;&#23558;Application&#23454;&#20363;&#20256;&#32473;HTTPServer&#20316;&#20026;callback,  HTTPServer&#20869;&#20250;&#26377;&#19968;&#31995;&#21015;&#30340;&#26041;&#27861;, &#23558;&#20250;&#35843;&#29992;callback(), &#23454;&#38469;&#23601;&#20250;&#36816;&#34892;&#36825;&#20010;&lt;strong&gt;call&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;2, tornado.httpserver.HTTPServer &#31867;&#21482;&#26159;&#25552;&#20379;&#19968;&#20010;&#22522;&#30784;httpserver&#30340;&#26041;&#27861;, httpserver.py&#21644;netutil.py &#20869;&#30340;TCPServer,&#36825;&#20004;&#20010;&#25991;&#20214;&#20027;&#35201;&#26159;&#23454;&#29616;http&#21327;&#35758;&#65292;&#35299;&#26512;header &#21644; body&#65292; &#29983;&#25104;request&#65292;&#22238;&#35843;&#32473;appliaction,  &#22312;httpserver.py&#20869;&#26377;&#19968;&#20010;HTTPConnection, &#23454;&#29616;http&#21327;&#35758;&#30340;&#36830;&#25509;&#37096;&#20998;. &#23545;&#20110;&#24213;&#23618;&#30340;socket, io&#32531;&#20914;&#31561;, &#26159;&#30001;TCPServer&#20013;, &#23558;ioloop, iostream&#20851;&#32852;&#22312;&#19968;&#36215;&#23454;&#29616;&#30340;.&lt;/p&gt;
&lt;p&gt;&#28304;&#30721;&#37324;&#35828;HTTPServer&#31867;&#21482;&#26159;&#20010;&#31616;&#21333;&#30340;http&#21327;&#35758;&#23454;&#29616;:
    A server is defined by a request callback that takes an HTTPRequest
    instance as an argument and writes a valid HTTP response with
    &lt;code&gt;HTTPRequest.write&lt;/code&gt;. &lt;code&gt;HTTPRequest.finish&lt;/code&gt; finishes the request (but does
    not necessarily close the connection in the case of HTTP/1.1 keep-alive
    requests). A simple example server that echoes back the URI you
    requested::&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    def handle_request(request):
       message = "You requested %s\n" % request.uri
       request.write("HTTP/1.1 200 OK\r\nContent-Length: %d\r\n\r\n%s" % (
                     len(message), message))
       request.finish()

    http_server = httpserver.HTTPServer(handle_request)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;HTTPServer&#26159;tornado.netutil.TCPServer&#30340;&#23376;&#31867;,  HTTPServer&#22312;&#26500;&#36896;&#20989;&#25968;__init_&#37324;&#22686;&#21152;&#20102;&#19968;&#20123;&#23646;&#24615;, &#28982;&#21518;&#37325;&#20889;&#20102;TCPServer&#30340;handle_stream:
    def handle_stream(self, stream, address):
        HTTPConnection(stream, address, self.request_callback,
                       self.no_keep_alive, self.xheaders)&lt;/p&gt;
&lt;p&gt;handle_stream &#36825;&#20010;&#26041;&#27861;, &#20250;&#22312;TCPServer&#37324;&#34987;_handle_connection&#26041;&#27861;&#35843;&#29992;:
    def handle_stream(self, stream, address):
        """Override to handle a new &lt;code&gt;IOStream&lt;/code&gt; from an incoming connection."""
        raise NotImplementedError()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def _handle_connection(self, connection, address):
    if self.ssl_options is not None:
        assert ssl, "Python 2.6+ and OpenSSL required for SSL"
        try:
            connection = ssl.wrap_socket(connection,
                                         server_side=True,
                                         do_handshake_on_connect=False,
                                         **self.ssl_options)
        except ssl.SSLError, err:
            if err.args[0] == ssl.SSL_ERROR_EOF:
                return connection.close()
            else:
                raise
        except socket.error, err:
            if err.args[0] == errno.ECONNABORTED:
                return connection.close()
            else:
                raise
    try:
        if self.ssl_options is not None:
            stream = SSLIOStream(connection, io_loop=self.io_loop)
        else:
            stream = IOStream(connection, io_loop=self.io_loop)
        self.handle_stream(stream, address)
    except Exception:
        logging.error("Error in connection callback", exc_info=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&#32780;_handle_connection&#20250;&#34987;add_socket&#35843;&#29992;, &#22238;&#21040;&#26368;&#19978;&#23618;, &#20854;&#23454;&#26159;hello world&#31243;&#24207;&#20013;&#30340;http_server.listen(port) &#36825;&#21477;, &#21457;&#36215;listen, listen&#26041;&#27861;&#20869;&#20250;&#35843;&#29992;add_socket,  &#32780;handle_stream&#20013;&#23454;&#29616;&#30340;&#26159;&#35843;&#29992;HTTPConnection&#26469;&#22788;&#29702;&#19968;&#31995;&#21015;http&#21327;&#35758;&#20013;&#30340;connection&#37096;&#20998;. &#22312;HTTPConnection&#20013;&#20250;&#22788;&#29702;callback,  &#36825;&#20010;callback&#23601;&#26159;Application&#31867;&#30340;&lt;strong&gt;call&lt;/strong&gt;,   &#26368;&#21518;request&#25968;&#25454;&#20250;&#20256;&#32473;&#26368;&#32456;&#30340;&#36923;&#36753;&#22788;&#29702;&#31867;web.RequestHandler.&lt;/p&gt;
&lt;p&gt;&#35828;&#36215;&#26469;&#29305;&#21035;&#36153;&#21170;, &#20570;&#20102;&#20010;&#24605;&#32500;&#23548;&#22270;(&#21487;&#33021;&#38656;&#35201;&#32763;&#22681;):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://lh5.ggpht.com/0817hoIHa1WnDSGF0wCk1UuKwEtwl1Iy5P7GfIjkwVX8B76_ZbRcgZAp4VSXq86hPnIPFcYPs3WntKGsN_qt=s1600" &gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-18-4-tornado-code-source-structure</guid><pubDate>Thu, 25 Apr 2013 13:43:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#25972;&#25968;&#36716;&#25442;&#25104;&#23545;&#24212;2&#36827;&#21046;&#20301;&#25972;&#25968;&#21644;&#30340;&#38598;&#21512;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-18-1-python-convert-number-to-bin-list</link><description>&lt;p&gt;&#35828;&#36215;&#26469;&#39064;&#30446;&#27604;&#36739;&#25303;&#21475;, &#27604;&#36739;&#24120;&#35265;&#21040;&#30340;&#26159;IP&#22320;&#22336;, &#30001;8&#20010;2&#36827;&#21046;&#20301;, &#36716;&#25442;&#25104;&#21313;&#36827;&#21046;&#26368;&#22823;&#20026;255, &#36825;&#37117;&#30693;&#36947;. &lt;/p&gt;
&lt;p&gt;&#20197;&#21069;&#23398;&#32593;&#32476;&#30340;&#26102;&#20505;, &#32463;&#24120;&#30896;&#21040;, &#19968;&#20010;ip&#30340;&#19968;&#27573;, &#27604;&#22914; 192.168.1.211&#20013;&#30340;211, 211&#36716;&#25442;&#25104;2&#36827;&#21046;&#26159;11010011,  &lt;/p&gt;
&lt;p&gt;&#36825;&#20010;2&#36827;&#21046;&#30340;8&#20010;&#20301;&#19978;&#23545;&#24212;&#30340;&#26159;:  &lt;/p&gt;
&lt;p&gt;[128, 64, 32, 16, 8, 4, 2, 1]    &lt;/p&gt;
&lt;p&gt;&#22909;&#20102;, &#38382;&#39064;&#23601;&#26159;&#36825;&#20010;, &#29992;&#19968;&#20010;&#31243;&#24207;&#23454;&#29616;, &#25226;&#20219;&#24847;&#25972;&#25968;A, &#20998;&#25286;&#25104;&#19968;&#20010;&#38598;&#21512;, &#38598;&#21512;&#20869;&#25968;&#23383;&#30456;&#21152;&#31561;&#20110;A,  &#19988;&#38598;&#21512;&#20869;&lt;/p&gt;
&lt;p&gt;&#25968;&#23383;&#21018;&#22909;&#26159;&#22312; [128, 64, 32, 16, 8, 4, 2, 1]&#20869;&#30340;.&lt;/p&gt;
&lt;p&gt;&#33258;&#24049;&#20889;&#20102;&#20010;&#27604;&#36739;&#25619;&#30340;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;f = lambda x:[2**i for i in range(len(bin(x)[2:][::-1])) if bin(x)[2:][::-1][i] != '0']&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;f(211)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[1, 2, 16, 64, 128] &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;f(124)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[4, 8, 16, 32, 64]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&#29992;&#22823;&#20110;255&#30340;&#25968;&#23383;&#21602;?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;f(500)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[4, 16, 32, 64, 128, 256]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&#20986;&#26469;&#20102;&#20010;256, 256&#24050;&#32463;&#19981;&#22312;  [128, 64, 32, 16, 8, 4, 2, 1]&#20869;&#20102;, &#24847;&#24605;&#23601;&#26159;&#36229;&#36807;8&#20301;2&#36827;&#21046;&#20102;.  &#22240;&#20026;8&#20301;2&#36827;&#21046;&#26368;&#22823;&#34920;&#31034;&#21313;&#36827;&#21046;&#25968;&#21482;&#33021;&#21040;255.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&#27880;&#35299;:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&#23383;&#31526;&#20018;&#25110;list&#30340;&#20999;&#29255;&#25805;&#20316;: [::-1], &#26159;&#23558;&#23383;&#31526;&#20018;&#25110;list&#20498;&#36716;,&#27604;&#22914;:&lt;/p&gt;
&lt;p&gt;'123456789'[::-1]  ==&amp;gt; '987654321' &lt;/p&gt;
&lt;p&gt;&#26377;&#19968;&#20010;&#26356;&#31934;&#22937;&#30340;&#23454;&#29616;&#26159;:  &lt;/p&gt;
&lt;p&gt;&#36890;&#36807;&#20301;&#20110;&#21644;&#20301;&#31227;&#25805;&#20316;, &#21487;&#20197;&#23454;&#29616;&#30340;&#27604;&#36739;&#31616;&#27905;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;f = lambda x:[1&amp;lt;&amp;lt;i for i in range(len(bin(127))-1) if 1&amp;lt;&amp;lt;i&amp;amp; x]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&#25191;&#34892;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;f(211)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[1, 2, 16, 64, 128] &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&#22914;&#26524;&#35201;&#36866;&#29992;&#20110;&#36229;&#36807;8&#20010;2&#36827;&#21046;&#20301;&#30340;&#25972;&#25968;, &#37027;&#20040;&#25913;&#36827;&#20026;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;f = lambda x:[1&amp;lt;&amp;lt;i for i in range(len(bin(x))-1) if 1&amp;lt;&amp;lt;i&amp;amp; x]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&#22312;2.7&#21644;3.0&#30340;&#29256;&#26412;&#37324;, len(bin(x)-1) &#21487;&#20197;&#29992;&#20869;&#32622;&#20989;&#25968;: n.bit_length() &#20195;&#26367;, &#26368;&#21518;&#23601;&#26159;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;[ 1 &amp;lt;&amp;lt; i for i in range(n.bit_length()) if n &amp;amp; (1 &amp;lt;&amp;lt; i) ]&lt;/code&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-18-1-python-convert-number-to-bin-list</guid><pubDate>Thu, 18 Apr 2013 14:00:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#20351;&#29992;rsyslog&#30340;template&#21151;&#33021;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-04-07-1-rsyslog-template-feature</link><description>&lt;h5&gt;rsyslog&#30340;&#19968;&#20010;&#39640;&#32423;&#28857;&#30340;&#29992;&#27861;, &#26681;&#25454;programname&#20570;&#26085;&#24535;&#25991;&#20214;&#20998;&#31163;, &#20351;&#29992;template&#21151;&#33021;&#26681;&#25454;&#31995;&#32479;&#26102;&#38388;&#20999;&#21106;&#26085;&#24535;&#25991;&#20214;:&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;
*.info;mail.none;authpriv.none;cron.none;!local1;!local3;!local2;               /var/log/messages

$SystemLogRateLimitInterval 2
$SystemLogRateLimitBurst 500

#$out  log_rotation, /terminus/gamelog/hades.log, 1024, /etc/./log_rotation_script


$template hades, "[%PROGRAMNAME%]%MSG:::sp-if-no-1st-sp%%MSG:::drop-last-lf%\n"
$template hadesfile, "/terminus/gamelog/hades_%$YEAR%-%$MONTH%-%$DAY%-%$HOUR%.log"
$template profilefile, "/terminus/gamelog/profile_attr_%$YEAR%-%$MONTH%-%$DAY%-%$HOUR%.log"
$template questfile, "/terminus/gamelog/quest_%$YEAR%-%$MONTH%-%$DAY%-%$HOUR%.log"
$template packagefile, "/terminus/gamelog/package_%$YEAR%-%$MONTH%-%$DAY%-%$HOUR%.log"

if $programname startswith 'hades' then                 ?hadesfile;hades
if $programname startswith 'profile' then                 ?profilefile;hades
if $programname startswith 'quest' then                 ?questfile;hades
if $programname startswith 'package' then                 ?packagefile;hades

&lt;/code&gt;
&lt;/pre&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-04-07-1-rsyslog-template-feature</guid><pubDate>Sun, 07 Apr 2013 18:00:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;postgres&#22791;&#20221;&#21644;&#24674;&#22797;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-14-1-postgres-backup-and-restore</link><description>&lt;h4&gt;&#22791;&#20221;:&lt;/h4&gt;
&lt;p&gt;&#22312;postgres.conf&#37197;&#32622;&#37324;&#25351;&#23450;:&lt;/p&gt;
&lt;p&gt;archive_command = 'cp "%p" /data/postgresql/arch/"%f"'&lt;/p&gt;
&lt;p&gt;&#35774;&#23450;:&lt;/p&gt;
&lt;p&gt;wal_level=archive  &lt;/p&gt;
&lt;p&gt;&#25163;&#24037;&#22791;&#20221;&#25805;&#20316;&#26041;&#24335;:&lt;/p&gt;
&lt;p&gt;psql cli&#21518;:&lt;/p&gt;
&lt;p&gt;select pg_start_backup(' test backup') &lt;/p&gt;
&lt;p&gt;&#28982;&#21518;:&lt;/p&gt;
&lt;p&gt;select pg_stop_backup() ,stop&#25191;&#34892;&#26102;,&#23601;&#20250;&#25191;&#34892;archive_command&#20013;&#23450;&#20041;&#30340;backup.&lt;/p&gt;
&lt;h4&gt;&#20174;wal&#22791;&#20221;&#20013;&#24674;&#22797;:&lt;/h4&gt;
&lt;p&gt;&#21019;&#24314;&#19968;&#20010;recovery.conf:&lt;/p&gt;
&lt;p&gt;cp /usr/pgsql-9.2/share/recovery.conf.sample recovery.conf&lt;/p&gt;
&lt;p&gt;&#22312;recovery.conf&#37197;&#32622;&#20013;&#25351;&#23450;:&lt;/p&gt;
&lt;p&gt;restore_command = 'cp /data/postgresql/arch/%f %p'&lt;/p&gt;
&lt;p&gt;&#28982;&#21518;&#37325;&#26032;&#21551;&#21160;postgresql, &#31995;&#32479;&#20250;&#26816;&#26597;&#21040;recovery.conf&#25991;&#20214;&#30340;&#23384;&#22312;,&#24182;&#25191;&#34892;restore, &#28982;&#21518;&#27491;&#24120;&#21551;&#21160;&#21518;,&#20250;&#33258;&#21160;&#23558;recovery.conf&#25991;&#20214;&#21517;&#25913;&#20026;recovery.conf.done&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-14-1-postgres-backup-and-restore</guid><pubDate>Thu, 14 Mar 2013 13:28:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#20351;&#29992;datetime, &#26500;&#36896;&#19968;&#20010;cron task&#23450;&#26399;&#25191;&#34892;&#32473;&#23450;&#30340;&#20989;&#25968;&#26041;&#27861;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-12-1-cron-task-with-datetime-obj</link><description>&lt;p&gt;&#20351;&#29992;datetime, &#26500;&#36896;&#19968;&#20010;cron task&#23450;&#26399;&#25191;&#34892;&#32473;&#23450;&#30340;&#20989;&#25968;&#26041;&#27861;&lt;/p&gt;
&lt;p&gt;&#19968;&#20010;Plan&#31867;, &#21253;&#21547;next_datatime, execute, &#20004;&#20010;&#26041;&#27861;, &lt;strong&gt;init&lt;/strong&gt;&#26041;&#27861;&#25351;&#26126;&#22312;&#23454;&#20363;&#21270;&#30340;&#26102;&#20505;,&#38656;&#35201;&#32473;&#23450;&#19968;&#20010;func&#20316;&#20026;&#21442;&#25968;, &#20854;&#20182;&#21442;&#25968;&#21487;&#20197;&#26159;&#26102;&#38388;&#38388;&#38548;, &#25110;&#20855;&#20307;&#30340;&#26102;&#38388;&#28857;,&lt;/p&gt;
&lt;pre&gt;

class Plan(object):

    def __init__(self, func):

        assert callable(fund)

        self.func = fund



    def excute(self):

        self.func()

&lt;/pre&gt;

&lt;p&gt;Plan&#20316;&#22522;&#31867;, &#26681;&#25454;&#38656;&#35201;&#21487;&#20197;&#20570;&#27966;&#29983;,  &#27604;&#22914;&#19968;&#20010;&#26041;&#24335;&#26159;&#25353;&#29031;&#25351;&#23450;&#30340;&#26102;&#38388;, &#38388;&#38548;&#25191;&#34892;func,  &#27966;&#29983;&#21478;&#22806;&#19968;&#20010;&#26159;&#21040;&#36798;&#25351;&#23450;&#26102;&#21051;&#25165;&#25191;&#34892;func:&lt;/p&gt;
&lt;pre&gt;

class  FixedIntervalPlan(Plan):    # &#38388;&#38548;&#25351;&#23450;&#26102;&#38388;&#21518;, &#22312;&#22806;&#35843;&#29992;&#30340;&#26102;&#20505;&#21028;&#26029;next_datetime&#26469;&#25191;&#34892;&#26041;&#27861;execute

    def __init__(self, fund, **kwargs):

        super(FixedIntervalPlan, self).__init__(func)

        self.interval = datetime.datetime(**kwargs)



    def next_datetime(self):

        return datetime.datetime.now() + self.interval



class FixedTimePlan(Plan):            

    # &#26681;&#25454;&#25351;&#23450;&#26102;&#21051;&#35745;&#31639;&#20986;&#19979;&#19968;&#26102;&#21051;, &#35843;&#29992;&#30340;&#26102;&#20505;&#21028;&#26029;next_datetime&#26469;&#20915;&#23450;&#26159;&#21542;&#22312;&#36825;&#20010;&#26102;&#21051;&#25191;&#34892;execute&#26041;&#27861;

    def __init__(self, func, **kwargs):

        super(FixedTimePlan, self).__init__(fund)

        self.time = datetime.time(**kwargs)



    def next_datetime(self):        

        now = datetime.datetime.now()

        if self.time &gt; now.time():

            return datetime.datetime.combine(now.date(), self.time)

        else:

            tomorrow = now + datetime.timedelta(days=1)

            return datetime.datetime.combine(tomorrow.date(), self.time)



&lt;/pre&gt;

&lt;p&gt;&#20197;&#19979;&#26159;&#19968;&#20010;&#23454;&#38469;&#20363;&#23376;, &#22914;&#20309;&#20351;&#29992;&#19978;&#38754;&#30340;2&#20010;&#31867;:&lt;/p&gt;
&lt;pre&gt;

cron_task_config = [

    FixedIntervalPlan(match_team, seconds=10),    #  &#27599;&#38548;10&#31186;&#25191;&#34892;match_team

]

&lt;/pre&gt;

&lt;p&gt;main&#20989;&#25968;&#22914;&#19979;:&lt;/p&gt;
&lt;pre&gt;

def main():

    pendding_tasks = []   #  &#21021;&#22987;&#21270;&#19968;&#27425;&#24050;&#32463;&#22312;cron_task_config&#37197;&#32622;&#20869;&#30340;&#20219;&#21153;&#23454;&#20363;&#21270;

    for plan in cron_task_config:

        # pan.next_datetime(), &#35745;&#31639;&#19979;&#27425;&#20219;&#21153;&#20160;&#20040;&#26102;&#20505;&#21487;&#20197;&#25191;&#34892;, &#23558;&#27492;&#26102;&#38388;&#21644;&#23454;&#20363;&#21270;&#30340;

        pendding_tasks.append((plan.next_datetime(), plan))                           

                                                                                         #  plan&#19968;&#36215;&#21152;&#20837;&#20934;&#22791;&#25191;&#34892;&#30340;&#21015;&#34920;

    cnt = 0

    while True:

        now = datetime.datetime.now()

        if cnt % 60 == 0:

            print now

        next_pendding_tasks = []

        for task in pendding_tasks:

            trigger_time, plan = task

            if trigger_time &lt; now: # &#35302;&#21457;&#26102;&#38388;&#23601;&#26159;plan&#30340;next_datetime, &#22914;&#26524;&#23567;&#20110;&#24403;&#21069;&#26102;&#38388;, &#34920;&#31034;&#21487;&#20197;&#25191;&#34892;

                plan.execute()

                next_pendding_tasks.append((plan.next_datetime(), plan)) # &#26412;&#27425;&#25191;&#34892;&#23436;&#20043;&#21518;,  &#20877;&#27425;&#35745;&#31639;next_datetime(), &#20197;&#22791;&#19979;&#27425;&#21028;&#26029;

            else:

                next_pendding_tasks.append(task) # &#35302;&#21457;&#26102;&#38388;&#19981;&#31526;&#21512;, &#21152;&#20837;&#19979;&#27425;&#25191;&#34892;&#30340;&#21015;&#34920;&#20869;

        pendding_tasks = next_pendding_tasks

        time.sleep(1)

        cnt += 1

&lt;/pre&gt;

&lt;p&gt;&#30097;&#38382;&#26159;, &#38656;&#35201;&#25630;&#36825;&#20040;&#22797;&#26434;&#20040;, time.sleep&#23450;&#26399;&#25191;&#34892;&#19981;&#23601;&#34892;&#20102;?  &#30701;&#26102;&#38388;&#21453;&#22797;&#25191;&#34892;&#26159;&#29992;time.sleep&#21487;&#35299;&#20915;, &#19981;&#36807;&#24403;&#38656;&#27714;&#26159;&#38656;&#35201;&#22312;&#26576;&#22825;&#26576;&#26102;&#21051;&#31934;&#30830;&#26102;&#25191;&#34892;, &#29992;time.sleep&#26174;&#28982;&#19981;&#34892;&#20102;.  &lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-12-1-cron-task-with-datetime-obj</guid><pubDate>Tue, 12 Mar 2013 16:29:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#20026;blog&#22686;&#21152;&#19968;&#20010;&#22312;&#32447;markdown editor&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-11-2-epiceditor-markdown-online_editor</link><description>&lt;h3&gt;&#20026;blog&#22686;&#21152;&#19968;&#20010;&#22312;&#32447;markdown editor&lt;/h3&gt;
&lt;p&gt;epiceditor&#26159;&#19968;&#20010;&#21069;&#31471;js&#24211;, &#25552;&#20379;&#19968;&#20010;&#22312;&#32447;&#30340;markdown&#32534;&#36753;&#22120;, &lt;a href="http://oscargodson.github.com/EpicEditor/"&gt;&#36825;&#37324;&#26159;&#20182;&#30340;&#20027;&#39029;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bb.yyu.me/editor"&gt;&#27979;&#35797;&#22320;&#22336;&lt;/a&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-11-2-epiceditor-markdown-online_editor</guid><pubDate>Mon, 11 Mar 2013 20:09:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;http&#21327;&#35758;&#30340;&#32531;&#23384;&#22836;&#31574;&#30053;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-11-1-http-cache-header-resolve</link><description>&lt;h4&gt;http&#21327;&#35758;&#30340;&#32531;&#23384;&#22836;&#31574;&#30053;&lt;/h4&gt;
&lt;p&gt;&#20197;&#19979;&#22836;&#22343;&#25351;&#36820;&#22238;&#32473;&#27983;&#35272;&#22120;&#30340;&#21709;&#24212;&#22836;&#65281;&lt;/p&gt;
&lt;p&gt;last-modify  &#21578;&#35785;&#27983;&#35272;&#22120;&#27492;&#25991;&#20214;&#30340;&#26368;&#21518;&#20462;&#25913;&#26102;&#38388;&#65292;&#27983;&#35272;&#22120;&#22312;&#19979;&#27425;&#35775;&#38382;&#21516;&#26679;&#25991;&#20214;&#26102;&#20250;&#24102;&#19978;&#36825;&#20010;&#20462;&#25913;&#26102;&#38388;&#65292;&#26381;&#21153;&#22120;&#22312;&#25910;&#21040;&#35831;&#27714;&#21518;&#27604;&#36739;&#65292;&#22914;&#26524;&#26080;&#21464;&#21270;&#21017;&#30452;&#25509;&#36820;&#22238;304&#21578;&#35785;&#27983;&#35272;&#22120;&#20869;&#23481;&#26080;&#21464;&#21270;&#65292;&#20351;&#29992;&#33258;&#24049;&#26412;&#22320;&#32531;&#23384;&#21363;&#21487;&#65292;&#36890;&#24120;web&#26381;&#21153;&#22120;&#37117;&#20250;&#33258;&#21160;&#20026;&#38745;&#24577;&#35831;&#27714;&#36820;&#22238;&#36825;&#20010;&#22836;!  &lt;/p&gt;
&lt;p&gt;etag  &#29992;&#22788;&#20197;&#21450;&#31639;&#27861;&#22522;&#26412;&#21644;last-modify&#19968;&#26679;&#65292;&#21482;&#26159;&#20026;&#20102;&#24357;&#34917;&#65292;&#24403;&#27983;&#35272;&#22120;&#21644;&#26381;&#21153;&#22120;&#38388;&#36890;&#36807;&#36127;&#36733;&#22343;&#34913;&#30001;&#22810;&#21488;&#26381;&#21153;&#22120;&#25552;&#20379;&#26381;&#21153;&#26102;&#65292;&#26377;&#21487;&#33021;&#21508;&#26381;&#21153;&#22120;&#26102;&#38388;&#24182;&#19981;&#33021;&#36798;&#21040;&#23436;&#20840;&#19968;&#33268;&#65292;&#23548;&#33268;last-modify&#22836;&#20869;&#23481;&#21487;&#33021;&#22833;&#25928;&#65281; &#36890;&#24120;&#26381;&#21153;&#22120;&#29992;etag&#26102;&#65292;&#23427;&#30340;&#20540;&#23601;&#26159;&#19968;&#20010;&#33021;&#21807;&#19968;&#26631;&#31034;&#25991;&#20214;&#25913;&#21160;&#65292;&#27604;&#22914;md5&#20540;&#65281;&lt;/p&gt;
&lt;p&gt;expires&#65306; &#26381;&#21153;&#22120;&#36820;&#22238;&#21709;&#24212;&#30340;&#26102;&#20505;&#65292;&#21253;&#21547;expires&#22836;&#65292;&#29992;&#26469;&#21578;&#35785;&#27983;&#35272;&#22120;&#65292;&#36825;&#20010;&#25991;&#20214;&#35831;&#27714;&#22312;&#22810;&#23569;&#26102;&#38388;&#20869;&#30452;&#25509;&#20351;&#29992;&#27983;&#35272;&#22120;&#26412;&#22320;&#32531;&#23384;&#65292;&#21482;&#35201;&#22312;&#27492;&#26102;&#38388;&#20869;&#65292;&#24403;&#27983;&#35272;&#22120;&#20877;&#27425;&#38656;&#35201;&#36825;&#20010;&#25991;&#20214;&#26102;&#65292;&#23558;&#30452;&#25509;&#20351;&#29992;&#26412;&#22320;&#25442;&#25104;&#65292;&#36830;http&#35831;&#27714;&#37117;&#30465;&#30053;&#20102;&#65292;&#30001;&#20110;&#27604;last-modify&#21644;etag&#23569;&#20102;http&#24314;&#31435;&#36830;&#25509;&#21644;&#21709;&#24212;&#30340;&#24320;&#38144;&#65292;&#25152;&#20197;&#26356;&#24555;&#12290;&lt;/p&gt;
&lt;p&gt;cache-control&#65306;  &#30001;&#20110;expires&#22836;&#23384;&#22312;&#19968;&#20010;&#38382;&#39064;&#65292;&#23601;&#26159;&#24403;&#26381;&#21153;&#22120;&#26102;&#38388;&#21644;pc&#26102;&#38388;&#30456;&#24046;&#65292;&#20551;&#22914;&#19968;&#20010;&#25991;&#20214;&#30340;expires&#26102;&#38388;&#26159;1&#23567;&#26102;&#65292;&#27492;&#26102;&#30896;&#24039;&#27983;&#35272;&#22120;&#26412;&#22320;&#26102;&#38388;&#27604;web&#26381;&#21153;&#22120;&#35201;&#24930;1&#23567;&#26102;&#65292;&#37027;&#23454;&#38469;&#19978;expires&#22836;&#26681;&#26412;&#36215;&#19981;&#21040;&#20316;&#29992;&#12290;&lt;/p&gt;
&lt;p&gt;&#25152;&#20197;http1.1&#21327;&#35758;&#65292;&#20551;&#22914;&#20102;cache-control&#22836;&#65292;&#20869;&#23481;&#26159;&#65306; cache-control: max-age=3600,  &#36825;&#26679;&#27983;&#35272;&#22120;&#23545;&#24453;&#25991;&#20214;&#32531;&#23384;&#26102;&#65292;&#20351;&#29992;&#30340;&#26159;&#30456;&#23545;&#26102;&#38388;&#12290;&#24357;&#34917;&#20102;expires&#22836;&#30340;&#38382;&#39064;.
&#23436;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-11-1-http-cache-header-resolve</guid><pubDate>Mon, 11 Mar 2013 19:33:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;zmq &#24322;&#27493;&#28040;&#24687;&#38431;&#21015;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-07-3-ZMQ-asynchronous-message-queue</link><description>&lt;h4&gt;zmq  push--pull &#26041;&#24335;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&#22312;ZMQ&#20013;&#26159;&#28129;&#21270;&#26381;&#21153;&#31471;&#21644;&#23458;&#25143;&#31471;&#30340;&#27010;&#24565;&#30340;&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#30456;&#23545;&#30340;&#26381;&#21153;&#31471;:&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;SUBer&#35746;&#38405;&#32773;bind&#19968;&#20010;&#31471;&#21475;, &#29992;&#26469;&#25509;&#25910;&#25968;&#25454;&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;zmq.PUSH&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;zmq poller&#36718;&#35810;&#23545;&#35937;,&lt;/li&gt;
&lt;li&gt;&#23558;sub&#27880;&#20876;&#21040;poller, &#24182;&#36171;&#20104;zmq.POLLIN&#24847;&#21619;&#36718;&#35810;&#36827;&#26469;&#30340;msg&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;sock=poller.poll()&#24320;&#22987;&#36718;&#35810;&lt;/li&gt;
&lt;li&gt;&#24403;&#26377;msg&#21457;&#36865;&#21040;suber&#35746;&#38405;&#32773;&#30340;&#30417;&#21548;&#31471;&#21475;&#21518;, sock.recv()&#26041;&#27861;&#23558;&#20250;&#25910;&#21040;msg,&lt;/li&gt;
&lt;li&gt;&#26368;&#21518;&#20351;&#29992;&#20043;&#21069;&#21019;&#24314;&#30340;pusher, &#20351;&#29992;pusher.send(msg)&#23558;&#28040;&#24687;&#25512;&#36865;&#21040;&#36830;&#25509;&#21040;&#30340;puller, &#22914;&#26524;&#26080;puller, &#27492;msg&#23558;&#34987;&#20002;&#24323;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&#30456;&#23545;&#30340;client&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#21019;&#24314;zmq.PULL &#36830;&#25509;&#21040;&#26381;&#21153;&#31471;&#25509;&#25910;push&#36807;&#26469;&#30340;&#28040;&#24687;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&#28040;&#24687;&#21019;&#24314;&#32773;&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;zmq.PUB&#23545;&#35937;, &#24847;&#21619;&#30528;&#27492;&#23545;&#35937;&#20026;&#19968;&#20010;&#28040;&#24687;&#21457;&#24067;&#32773;: pub = context.socket(zmq.PUB)&lt;/li&gt;
&lt;li&gt;&#36830;&#25509;&#21040;&#26381;&#21153;&#31471;&#30340;suber&#30340;&#30417;&#21548;&#31471;&#21475;: pub.connect('tcp://%s:%s' % (sub_host, sub_port))&lt;/li&gt;
&lt;li&gt;&#26368;&#21518;&#23558;&#38656;&#35201;&#21457;&#36865;&#30340;msg, &#20351;&#29992;pub.send(msg)&#21457;&#36865;&#32473;suber&#35746;&#38405;&#32773;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&#20195;&#30721;&#31034;&#20363;:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&#23545;&#20110;&#26381;&#21153;&#31471;:
&lt;pre&gt;
&lt;code&gt;
import zmq
context = zmq.Context()&lt;/p&gt;
&lt;p&gt;"""&#23450;&#20041;&#19968;&#20010;&#35746;&#38405;&#32773;, &#27880;&#24847;&#30340;&#26159;,&#36825;&#37324;&#30340;&#35746;&#38405;&#32773;&#26159;&#20174;&#26381;&#21153;&#31471;&#26469;&#30475;, 
&#36825;&#20010;method&#26159;&#35746;&#38405;&#32773;(&#20174;&#36825;&#20010;&#35282;&#24230;&#26469;&#35828;&#26381;&#21153;&#31471;&#20063;&#33021;&#30475;&#25104;&#26159;&#23458;&#25143;&#31471;&#20102;), 
&#23545;&#24212;&#30340;client&#21019;&#24314;&#19968;&#20010;&#21457;&#24067;&#32773;(PUB)&#26102;, &#20351;&#29992;connect&#36830;&#25509;&#30340;&#23601;&#26159;&#27492;&#26381;&#21153;&#31471;&#30340;&#35746;&#38405;&#32773;."""
def create_subscriber(port):
    sub = context.socket(zmq.SUB)
    sub.bind('tcp://*:%s' % port)
    sub.setsockopt(zmq.SUBSCRIBE, '')
    return sub&lt;/p&gt;
&lt;p&gt;"""&#27492;&#27169;&#24335;&#22312;&#26381;&#21153;&#31471;&#26242;&#26102;&#27809;&#29992;&#29992;&#21040;"""
def create_publisher(port):
    pub = context.socket(zmq.PUB)
    pub.bind('tcp://*:%s' % port)
    pub.setsockopt(zmq.HWM, 0)
    return pub&lt;/p&gt;
&lt;p&gt;"""&#23450;&#20041;&#20010;&#25512;&#36865;&#32773;, &#22914;&#26524;&#26377;client&#36830;&#19978;&#27492;pusher, &#24403;&#26377;&#26032;&#28040;&#24687;&#26102;,
client&#30340;pull.recv()&#23558;&#20250;&#33719;&#24471;msg"""
def create_pusher(port):
    pusher = context.socket(zmq.PUSH)
    pusher.bind('tcp://*:%s' % port)
    return pusher&lt;/p&gt;
&lt;p&gt;def main():
    """&#21021;&#22987;&#21270;&#20989;&#25968;&#26041;&#27861;"""
    sub = create_subscriber(args.sub_port)
    pub = create_publisher(args.pub_port)
    pusher = create_pusher(args.push_port)&lt;/p&gt;
&lt;p&gt;""" &#21019;&#24314;&#19968;&#20010;Poller&#21021;&#22987;&#21270;&#65292; &#23558;sub(&#35746;&#38405;&#32773;)&#27880;&#20876;&#21040;&#27492;Poller, &#24182;&#20351;&#29992;POLLIN&#21442;&#25968;, 
&#22312;&#21518;&#38754;&#30340;poller.pull()&#26041;&#27861;&#20013;, &#23558;&#33021;pull&#21040;&#26368;&#26032;&#30340;,&#20174;client&#31243;&#24207;&#21457;&#21040;sub&#26469;&#30340;&#28040;&#24687;,
&#26368;&#21518;&#20351;&#29992;pub&#21644;pusher&#23558;&#28040;&#24687;send&#20986;&#21435;"""
    poller = zmq.Poller()
    poller.register(sub, zmq.POLLIN)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;while True:
    socks = poller.poll()  \# &#21019;&#24314;socks
    for k, v in socks:
       """ &#33719;&#21462;&#28040;&#24687;,&#27492;&#28040;&#24687;&#23454;&#38469;&#26159;&#30001;client&#31243;&#24207;&#30340;pub&#21457;&#36865;&#21040;&#27492;server&#30340;sub,
       &#28982;&#21518;&#32463;&#30001;poller.register, &#34987;poller.poll()&#23454;&#20363;&#32463;&#30001;recv&#26041;&#27861;&#33719;&#21462;"""
        message = k.recv()

        pub.send(message)
        # FIXME: Use gevent instead.
        try:
            \# &#20351;&#29992;pusher&#23558;msg&#25512;&#36865;&#32473;client&#31243;&#24207;&#30340;puller.recv, 
            pusher.send(message.split(' ', 1)[-1], zmq.NOBLOCK)
        except:
            pass
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&#23458;&#25143;&#31471;:&lt;/strong&gt;
&lt;pre&gt;
&lt;code&gt;
import zmq
context = zmq.Context()&lt;/p&gt;
&lt;p&gt;"""&#21019;&#24314;&#19968;&#20010;&#21457;&#24067;&#32773;, &#21457;&#24067;&#32773;&#36830;&#25509;&#21040;server&#31243;&#24207;&#30340;&#35746;&#38405;&#32773;, &#20135;&#29983;msg&#21518;send, 
&#20854;&#20182;&#35821;&#35328;&#27604;&#22914;cpp, &#20063;&#26159;&#19968;&#26679;&#36830;
&#25509;&#30340;&#26159;&#19978;&#38754;server&#31243;&#24207;&#30340;sub, &#21457;&#36865;mq"""
def pub():
    pub = context.socket(zmq.PUB)
    pub.connect('tcp://%s:%s' % (sub_host, sub_port))
    while True:
        msg = 'abc hello' + str(time.time())
        pub.send(msg)
        print 'sending', msg
        time.sleep(1)&lt;/p&gt;
&lt;p&gt;# &#26242;&#26102;&#27809;&#26377;&#29992;&#21040;, &#27492;&#20165;&#20316;&#31034;&#20363;
def sub():
    sub = context.socket(zmq.SUB)
    sub.setsockopt(zmq.SUBSCRIBE, '')
    sub.connect('tcp://%s:%s' % (pub_host, pub_port))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;while True:
    msg = sub.recv()
    print 'Got:', msg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"""&#21019;&#24314;&#19968;&#20010;puller, &#36830;&#25509;&#30340;&#26159;server&#31243;&#24207;&#20013;&#30340;pusher, server&#31471;pusher&#26377;&#26032;msg&#26102;, &#20250;push&#21040;&#27492;puller"""
def pull():
    pull = context.socket(zmq.PULL)
    pull.connect('tcp://%s:%s' % (pusher_host, pusher_port))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"""&#19968;&#20010;&#27515;&#24490;&#29615;, &#19981;&#26029;pull&#26032;msg, &#25509;&#25910;&#21040;msg&#21518;&#26681;&#25454;msg&#20877;&#36827;&#34892;&#30456;&#20851;&#19994;&#21153;&#36923;&#36753;,
&#19968;&#33324;msg&#37319;&#29992;json&#26684;&#24335;, &#33021;&#38750;&#24120;&#26041;&#20415;&#22788;&#29702;&#19981;&#33021;&#35821;&#35328;&#31243;&#24207;&#20043;&#38388;, &#19981;&#21516;&#36827;&#31243;&#20043;&#38388;&#30340;&#36890;&#20449;."""
while True:
    msg = pull.recv()
    print 'Got: ', msg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-07-3-ZMQ-asynchronous-message-queue</guid><pubDate>Thu, 07 Mar 2013 16:47:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;perf  sched  &#25910;&#38598;&#21644;&#20998;&#26512;&#35843;&#24230;&#30456;&#20851;&#25968;&#25454;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-07-2-perf-performance-tools</link><description>&lt;p&gt;1,&#36890;&#24120;&#29992;&#21040; perf sched  record  &#25910;&#38598;&#31995;&#32479;&#30456;&#20851;&#30340;&#35843;&#24230;&#25968;&#25454;, &#28982;&#21518;&#20351;&#29992;pert ached   latency  --sort max &#26469;&#25171;&#21360;&#20986;&#25910;&#38598;&#21040;&#30340;&#20449;&#24687;,perf sched  latency  --sort  max &#23637;&#29616;&#30340;&#25968;&#25454;&#20013;&#21508;&#20010;column&#30340;&#21547;&#20041;&#22914;&#19979;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Task: &#36827;&#31243;&#30340;&#21517;&#23383;&#21644; pid &lt;/li&gt;
&lt;li&gt;Runtime: &#23454;&#38469;&#36816;&#34892;&#26102;&#38388;&lt;/li&gt;
&lt;li&gt;Switches: &#36827;&#31243;&#20999;&#25442;&#30340;&#27425;&#25968;&lt;/li&gt;
&lt;li&gt;Average delay: &#24179;&#22343;&#30340;&#35843;&#24230;&#24310;&#36831;&lt;/li&gt;
&lt;li&gt;Maximum delay: &#26368;&#22823;&#24310;&#36831;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&#20854;&#20013;&#26368;&#20540;&#24471;&#20851;&#27880;&#30340;&#26159;Maxinum delay&#30340;&#25968;&#25454;&lt;/p&gt;
&lt;p&gt;2, perf sched reply ,  &#23427;&#35797;&#22270;&#37325;&#25918;pert.data&#25991;&#20214;&#20013;&#38145;&#35760;&#24405;&#30340;&#35843;&#24230;&#22330;&#26223;, pert.data&#25991;&#20214;&#26159;&#30001;&#19978;&#38754;&#30340;pert ached record&#31561;&#25910;&#38598;&#21629;&#20196;&#20135;&#29983;,  &#22914;&#26524;&#26159;&#20351;&#29992;pert  record&#20135;&#29983;&#30340;pert.data&#25991;&#20214;, &#37027;&#20040;&#20351;&#29992;pert  ached reply&#24182;&#26080;&#27861;&#20998;&#26512;&#20986;&#26377;&#29992;&#30340;&#25968;&#25454;.
&#19979;&#38754;&#26159;&#19968;&#27425;per  ached reply&#30340;&#32467;&#26524;:&lt;/p&gt;
&lt;pre&gt;\#perf sched reply 
run measurement overhead: 173 nsecs
sleep measurement overhead: 53289 nsecs
the run test took 999980 nsecs
the sleep test took 1123326 nsecs
nr_run_events:        33692
nr_sleep_events:      33910
nr_wakeup_events:     16719
target-less wakeups:  40
multi-target wakeups: 30
task      0 (             swapper:         0), nr_events: 38449
task      1 (            qemu-kvm:     21706), nr_events: 479
task      2 (            qemu-kvm:     21705), nr_events: 416
task      3 (            qemu-kvm:     17648), nr_events: 2464
task      4 (            qemu-kvm:     17640), nr_events: 2268
task      5 (         ksoftirqd/0:         4), nr_events: 70
task      6 (            qemu-kvm:     17645), nr_events: 2255
task      7 (            qemu-kvm:     17646), nr_events: 2050
task      8 (            qemu-kvm:     18320), nr_events: 1143
task      9 (            qemu-kvm:     18318), nr_events: 1420
task     10 (            qemu-kvm:     17647), nr_events: 2092
&lt;/pre&gt;

&lt;p&gt;&#20854;&#20013;task 0   swapper&#21344;&#20102;&#24456;&#22823;&#27604;&#20363;&#30340;event,  &#35828;&#26126;&#25105;&#30340;&#31995;&#32479;&#20013;&#22312;&#36827;&#34892;&#36739;&#22823;&#30340;&#20132;&#25442;&#20998;&#21306;&#20351;&#29992;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-07-2-perf-performance-tools</guid><pubDate>Thu, 07 Mar 2013 15:11:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#25346;&#36733;kvm&#38236;&#20687;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-07-1-mount-kvm-img</link><description>&lt;p&gt;kvm&#30340;guest&#38236;&#20687;&#21487;&#20197;mount&#21040;&#26412;&#22320;
&#39318;&#20808;&#20351;&#29992;qemu-img info  img_file&#26597;&#30475;&#38236;&#20687;&#20351;&#29992;&#30340;&#25991;&#20214;&#26684;&#24335;, &#36890;&#24120;&#40664;&#35748;&#30340;&#26159;raw  &lt;/p&gt;
&lt;pre&gt;
[root@ttt data]# qemu-img info vm1.img

image: vm1.img
file format: raw
virtual size: 20G (21474836480 bytes)
disk size: 11G  
&lt;/pre&gt;

&lt;p&gt;&#28982;&#21518;&#21487;&#20351;&#29992;fdisk&#26597;&#30475;guest&#20351;&#29992;&#27492;&#38236;&#20687;&#26102;&#30340;&#20998;&#21306;&#26041;&#24335;:  &lt;/p&gt;
&lt;pre&gt;[root@ttt data]# fdisk -ul vm1.img
You must set cylinders.
You can do this from the extra functions menu.

Disk vm1.img: 0 MB, 0 bytes
255 heads, 63 sectors/track, 0 cylinders, total 0 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x0008de38


  Device Boot      Start         End      Blocks   Id  System
vm1.img1            2048     8194047     4096000   82  Linux swap / Solaris
Partition 1 does not end on cylinder boundary.
vm1.img2   *     8194048    41943039    16874496   83  Linux
Partition 2 has different physical/logical endings:
     phys=(1023, 254, 63) logical=(2610, 212, 34)
&lt;/pre&gt;

&lt;p&gt;&#22914;&#26524;&#26159;&#20856;&#22411;&#30340;raw&#26041;&#24335;, &#19988;guest&#20351;&#29992;&#30340;&#19981;&#26159;lvm&#30340;&#20998;&#21306;&#31649;&#29702;&#26041;&#24335;,&#37027;&#26041;&#24335;&#24456;&#31616;&#21333;:
&lt;pre&gt;
losetup /dev/loop0 image.img
kpartx -a /dev/loop0mount /dev/mapper/loop0p1 /mnt/image
&lt;/pre&gt;
&#36825;&#26679;&#23601;&#23436;&#25104;&#20102;mount&#21040;&#26412;&#22320;&#30340;&#30446;&#30340;.&lt;/p&gt;
&lt;p&gt;&#20197;&#19979;&#36164;&#26009;&#26159;&#24403;img&#26159;qcow2&#25110;&#36825;kvm&#30340;guest&#20351;&#29992;&#30340;lvm&#36923;&#36753;&#21367;&#31649;&#29702;&#26041;&#24335;&#26102;, &#22914;&#20309;mount&#38236;&#20687;&#21040;&#26412;&#22320;&#30340;&#26041;&#27861;:&lt;/p&gt;
&lt;pre&gt;
Mounting a partition from raw image is pretty simple:

losetup /dev/loop0 image.img
kpartx -a /dev/loop0
mount /dev/mapper/loop0p1 /mnt/image
If kernel parameter (as loop in compiled into Fedora&#8217;s kernel) like loop.max_part=63 added it is even simplier:
losetup /dev/loop0 image.img
mount /dev/loop0p1 /mnt/image
Alternative way is to specify direct offset to partition:
mount image.img /mnt/image -o loop,offset=32256

To mount qcow2 images there is (at least in F-11 qemu) very useful qemu-nbd util. It shares image through kernel network block device protocol and this allows to mount it:
modprobe nbd max_part=63
qemu-nbd -c /dev/nbd0 image.img
mount /dev/nbd0p1 /mnt/image

If LVM is present on image it could be initialized with:
vgscan
vgchange -ay
mount /dev/VolGroupName/LogVolName /mnt/image

Finishing is done with (depending on how it was initalized):
umount /mnt/image
vgchange -an VolGroupName
killall qemu-nbd
kpartx -d /dev/loop0
losetup -d /dev/loop0


Posted by Alexey Torkhov at 16:33
Labels: Fedora
&lt;/pre&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-07-1-mount-kvm-img</guid><pubDate>Thu, 07 Mar 2013 13:55:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;pptp&#20570;vpn, &#36830;&#25509;&#21040;&#20869;&#32593;&#30452;&#25509;&#33021;&#35775;&#38382;&#20869;&#32593;IP&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-19-1-pptp-vpn-iptables</link><description>&lt;p&gt;pptp&#26381;&#21153;&#22120;:&lt;/p&gt;
&lt;p&gt;pptp&#19979;&#21457;&#19979;&#21435;&#30340;ip&#32593;&#27573;: 10.168.0.0/24 &lt;/p&gt;
&lt;p&gt;iptables&#37197;&#32622;:  (&#27880;&#24847;&#25171;&#24320;ip_forward&#36716;&#21457;):
&lt;pre&gt;
-A FORWARD -s 10.168.0.0/24 -j ACCEPT
-A POSTROUTING -s 10.168.0.0/24 -j MASQUERADE 
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&#22686;&#21152;&#19968;&#26465;&#36335;&#30001;, &#23558;&#35775;&#38382;&#20869;&#32593;172.16.8.0/24&#30340;&#36716;&#21457;&#21040; &#20869;&#32593;&#19968;&#21488;&#24050;&#25320;pptp&#21040;&#26381;&#21153;&#22120;&#19978;&#30340;&#19968;&#20010;IP10.168.0.234:    &lt;/p&gt;
&lt;p&gt;&lt;code&gt;route add -net 172.16.8.0/24 gw 10.168.0.234&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&#22312;&#20869;&#32593;&#36825;&#21488;10.168.0.234&#30340;&#26381;&#21153;&#22120;&#19978;, &#23384;&#22312;&#21478;&#22806;&#19968;&#20010;&#30495;&#27491;&#30340;&#20869;&#32593;&#32593;&#21345;IP 172.16.8.213,&#22312;&#36825;&#20010;&#26381;&#21153;&#22120;&#19978;&#21551;&#21160;iptables, &#23558;&#23427;&#24403;&#36335;&#30001;&#22120;&#20351;&#29992;&#26469;&#36335;&#30001;&#32593;&#32476;&#35831;&#27714;&#21040;&#25972;&#20010;172.16.8.0/24&#30340;&#20869;&#32593;&#32593;&#27573;:&lt;/p&gt;
&lt;p&gt;&#21516;&#26679;&#30340;iptables&#37197;&#32622;:   (&#27880;&#24847;&#25171;&#24320;ip_forward&#36716;&#21457;)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-A FORWARD -s 10.168.0.0/24 -j ACCEPT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-A POSTROUTING -s 10.168.0.0/24 -j MASQUERADE&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&#22686;&#21152;&#19968;&#26465;route:
&lt;pre&gt;
route add -net 10.168.0.0/24  gw 10.168.0.1
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&#37197;&#32622;&#23436;&#25104;, &#19979;&#38754;&#26159;&#35841;&#24819;&#36890;&#36807;pptp&#30495;&#27491;&#36830;&#25509;&#21040;&#20869;&#32593;&#26102;, &#33258;&#24049;&#30340;&#37197;&#32622;&#26041;&#27861;:&lt;/p&gt;
&lt;p&gt;for linux:&lt;/p&gt;
&lt;p&gt;&#20351;&#29992;pptpsetup&#31243;&#24207;: 
&lt;pre&gt;
./pptpsetup --create test --server 180.153.136.14 --username test --password defage --encrypt --start
&lt;/pre&gt;
&#28982;&#21518;&#22686;&#21152;&#19968;&#26465;&#36335;&#30001;:&lt;/p&gt;
&lt;p&gt;route add -net 172.16.8.0/24 gw 10.168.0.1&lt;/p&gt;
&lt;p&gt;&#33509;&#38656;&#35201;&#35775;&#38382;&#20854;&#20182;pptp&#33410;&#28857;, &#39035;&#22686;&#21152;: route add -net 10.168.0.0/24 gw 10.168.0.1&lt;/p&gt;
&lt;p&gt;&#28982;&#21518;&#21487;&#20197;&#30452;&#25509;ping&#36890;&#20869;&#32593;&#30340;172.16.8.0/24&#20869;&#20219;&#24847;&#20027;&#26426;&#20102;.&lt;/p&gt;
&lt;h6&gt;for mac:&lt;/h6&gt;
&lt;p&gt;&#36830;&#25509;VPN&#21518;, &#25171;&#24320;&#31995;&#32479;&#20559;&#22909;&#35774;&#32622;==&amp;gt;&#32593;&#32476;&#35774;&#32622; ===&amp;gt; &#35774;&#23450;&#26381;&#21153;&#39034;&#24207;, &#23558;VPN&#25302;&#21040;&#26368;&#39640;&#24471;&#20301;&#32622;, &#34920;&#31034;&#32593;&#32476;&#23558;&#20248;&#20808;&#20351;&#29992;vpn&#36830;&#25509;.&lt;/p&gt;
&lt;h6&gt;for windows:&lt;/h6&gt;
&lt;p&gt;&#38480;&#21046;:&lt;/p&gt;
&lt;p&gt;&#30001;&#20110;180.153.136.14&#26381;&#21153;&#22120;&#30340;&#32593;&#20851; NAT&#23384;&#22312;&#38024;&#23545;pptp&#21327;&#35758;&#30340;&#23545;&#28857;&#38480;&#21046;,&#21333;&#20010;&#20986;&#21475;IP&#21482;&#33021;&#26377;&#19968;&#20010;client&#21487;&#20197;&#36830;&#25509;&#19978;180&#30340;VPN&#26381;&#21153;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-19-1-pptp-vpn-iptables</guid><pubDate>Tue, 19 Feb 2013 11:33:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;pg&#30340;backup&#21644;restore&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-18-3-postgresql-backup-restore</link><description>&lt;p&gt;&#26377;2&#31181;&#26041;&#24335;&#21487;&#20197;&#23454;&#29616;backup
1,&#20351;&#29992;wal backup&#30340;&#26041;&#24335;,&#37197;&#32622;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
wal_level = archive

archive_mode = on

archive_command = 'test ! -f /data/postgresql/arch/%f &amp;&amp; 

cp %p /data/postgresql/arch/%f'
\#archive_timeout = 600
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#37197;&#32622;&#21518;reload pgmaster&#36827;&#31243;, &#27492;&#26102;&#21487;&#20197;&#20351;&#29992;psql&#36830;&#25509;pg&#21518;&#25163;&#24037;&#36827;&#34892;:
select pg_start_backup('test');
select pg_stop_backup();
&#31995;&#32479;&#20250;&#23558;wal&#26085;&#24535;&#22791;&#20221;&#21040;&#37197;&#32622;&#25991;&#20214;&#25351;&#23450;&#30340;&#30446;&#24405;, &#21478;&#22806;&#30340;&#26041;&#24335;,&#21487;&#20197;&#33050;&#26412;&#21270;&#36825;&#20010;&#25805;&#20316;,&#21516;&#26102;&#23558;walbackup&#21518;&#30340;&#25991;&#20214;&#21387;&#32553;&#25171;&#21253;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
\#!/bin/sh

if [ "$1" == "" ]; then
    $0 backupname
    exit 1
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
mkdir -p /data/postgresql/arch
mkdir -p /data/postgresql/arch_gz

psql -Upostgres &lt;&lt; START_BACKUP_END
select pg_start_backup('$1');
\q
START_BACKUP_END

find /data/postgresql/arch/ -print | cpio -o -H crc | gzip -v &gt; /data/postgresql/arch_gz/$1.cpio.gz

psql  -Upostgres&lt;&lt; STOP_BACKUP_END
select pg_stop_backup();
\q
STOP_BACKUP_END
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#put backup file to ftp&lt;/p&gt;
&lt;p&gt;2, &#31532;2&#20010;&#26041;&#24335;&#26159;&#30452;&#25509;&#20351;&#29992;pg_dump&#21629;&#20196;&#36827;&#34892;
    pg_dump -Upostgres testdb &amp;gt; testdb.backup.sql&lt;/p&gt;
&lt;p&gt;&#20351;&#29992;wal backup&#30340;&#22791;&#20221;&#26041;&#24335;&#30340;&#20248;&#32570;&#28857;:&lt;/p&gt;
&lt;p&gt;Advantages:
Incremental, the WAL archives include everything necessary to restore the current state of the database
Almost no overhead, copying WAL files is cheap
You can restore the database at any point in time (this feature is called PITR, or point-in-time recovery)
Disadvantages:
More complicated to set up than pg_dump
The full backup will be much larger than a pg_dump because all internal table structures and indexes are included
Doesn't work work well for write-heavy databases, since recovery will take a long time.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-18-3-postgresql-backup-restore</guid><pubDate>Mon, 18 Feb 2013 18:40:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;flame graph&#21487;&#35270;&#21270;&#20998;&#26512;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-18-2-flame_graph</link><description>&lt;p&gt;FlameGraph&#30340;&#20363;&#22270;,&#35299;&#37322;&#22914;&#19979;:&lt;/p&gt;
&lt;p&gt;&#22270;&#20013;&#27599;&#19968;&#20010;&#26041;&#22359;&#20195;&#34920;&#26632;&#37324;&#30340;&#19968;&#20010;&#20989;&#25968;&#12290;
Y&#36724;&#20195;&#34920;&#35843;&#29992;&#28145;&#24230;&#65292;&#26368;&#19978;&#38754;&#30340;&#26159;&#24403;&#21069;&#27491;&#22312;CPU&#19978;&#25191;&#34892;&#30340;&#20989;&#25968;&#65292;&#19979;&#38754;&#30340;&#37117;&#26159;&#20854;&#31062;&#20808;&#12290;&#27599;&#20010;&#20989;&#25968;&#37117;&#26159;&#30001;&#23427;&#19979;&#26041;&#30340;&#20989;&#25968;&#35843;&#29992;&#30340;&#12290;
X&#36724;&#19981;&#26159;&#25353;&#29031;&#26102;&#38388;&#20808;&#21518;&#25490;&#21015;&#30340;&#65292;&#23427;&#21482;&#20195;&#34920;&#26679;&#26412;&#25968;&#30446;&#12290;&#26041;&#22359;&#36234;&#23485;&#65292;&#20195;&#34920;&#35813;&#20989;&#25968;&#20986;&#29616;&#30340;&#27425;&#25968;&#36234;&#22810;&#12290;
&#22312;&#26377;&#22810;&#20010;&#24182;&#21457;&#32447;&#31243;&#21516;&#26102;&#34987;&#37319;&#26679;&#65292;&#26679;&#26412;&#24635;&#25968;&#21487;&#33021;&#36229;&#36807;&#37319;&#26679;&#25152;&#29992;&#30340;&#26102;&#38388;&#12290;&lt;/p&gt;
&lt;p&gt;&#37197;&#21512;perf&#20351;&#29992;&#30340;&#26041;&#27861;,&#20998;3&#27493;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;perf record -a -g -F 1000 sleep 60&lt;/p&gt;
&lt;p&gt;perf script | ./stackcollapse-perf.pl &amp;gt; out.perf-folded&lt;/p&gt;
&lt;p&gt;cat out.perf-folded | ./flamegraph.pl &amp;gt; perf-kernel.svg&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;perf record&#26159;&#20351;&#29992;perf&#24037;&#20855;&#37319;&#26679;, -a&#21442;&#25968;&#34920;&#31034;&#23545;&#25972;&#20010;&#31995;&#32479;&#37319;&#26679;,&#22914;&#26524;&#24076;&#26395;&#21482;&#37319;&#26679;&#25351;&#23450;&#36827;&#31243;, &#37027;&#20040;&#21487;&#20197;&#20351;&#29992;-p &#21442;&#25968;&#21518;&#36319;PID
-g&#34920;&#31034;&#35760;&#24405;&#20989;&#25968;&#35843;&#29992;&#26719;, -F&#34920;&#31034;&#37319;&#26679;&#39057;&#29575;, &#26368;&#21518;&#30340;sleep 60&#34920;&#31034;&#37319;&#26679;60&#31186;&#21518;&#36864;&#20986;&#28982;&#21518;&#29983;&#25104;perf.data&#25991;&#20214;&lt;/p&gt;
&lt;p&gt;perf script &#34920;&#31034; Read perf.data (created by perf record) and display trace output 
&#36825;&#20123;&#20174;perf --help&#20013;&#37117;&#33021;&#30475;&#21040;&#24110;&#21161;&#20449;&#24687;&lt;/p&gt;
&lt;p&gt;&#26368;&#21518;&#19968;&#27493;&#26159;&#20351;&#29992;flamergraph.pl&#29983;&#25104;svg&#22270;&#29255;&lt;/p&gt;
&lt;p&gt;perf&#24037;&#20855;&#38750;&#24120;&#26041;&#20415;, &#19978;&#36848;&#21482;&#26159;&#20026;&#20102;&#20135;&#29983;&#22270;&#29255;&#24418;&#24335;&#30340;&#21033;&#20110;&#30452;&#35266;, &#21363;&#20351;&#27809;&#26377;flamegraph, &#21482;&#29992;perf&#20063;&#19968;&#26679;&#33021;&#26041;&#20415;&#30475;&#21040;&#32479;&#35745;&#25968;&#25454;:&lt;/p&gt;
&lt;p&gt;perf record&#20043;&#21518;,  &#20351;&#29992;perf report &#21363;&#21487;&#26597;&#30475;&#25191;&#34892;record&#26102;&#29983;&#25104;&#30340;&#32479;&#35745;&#25968;&#25454;&#20102;,&#30456;&#23545;&#30452;&#25509;vim&#26597;&#30475;&#32479;&#35745;&#25968;&#25454;&#20063;&#26102;&#27604;&#36739;&#30452;&#35266;&#30340;.&lt;/p&gt;
&lt;p&gt;&#20854;&#20013;&#36824;&#26377;pert top  , perf stat&#31561;, pert top&#33021;&#23454;&#26045;&#30340;&#32479;&#35745;&#25968;&#25454;&#24182;&#20197;top&#30340;&#24418;&#24335;&#23637;&#29616;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-18-2-flame_graph</guid><pubDate>Mon, 18 Feb 2013 17:29:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;test&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-18-1-test-color-markdown</link><description>&lt;h1&gt;&lt;font color="green"&gt; &#27979;&#35797;markdown&#25991;&#23383;&#39068;&#33394; &lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&#24456;&#26126;&#26174;&#39068;&#33394;&#19981;&#38169;&#30340;&#22043;&lt;/p&gt;
&lt;p&gt;&#20877;&#26469;&#19968;&#20010;&#29031;&#29255;&#21543;:
&lt;a href="http://www.flickr.com/photos/liutaihua/8038608038/" title="Flickr &#19978; &#39118;&#30340;&#23614;&#24052; &#30340; line 10"&gt;&lt;img src="http://farm9.staticflickr.com/8318/8038608038_5f9875a147.jpg" width="500" height="276" alt="line 10"&gt;&lt;/a&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-18-1-test-color-markdown</guid><pubDate>Tue, 24 Jan 2012 22:55:00 GMT</pubDate></item></channel></rss>