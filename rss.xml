<?xml version="1.0" encoding="iso-8859-1"?>
<rss version="2.0"><channel><title>歪鱼</title><link>http://bb.yyu.me</link><description></description><lastBuildDate>Mon, 11 Mar 2013 11:55:45 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>&lt;h3&gt;&lt;font color="green"&gt;http&#21327;&#35758;&#30340;&#32531;&#23384;&#22836;&#31574;&#30053;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-11-1-http-cache-header-resolve</link><description>&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;http&#21327;&#35758;&#30340;&#32531;&#23384;&#22836;&#31574;&#30053;&lt;/h4&gt;
&lt;p&gt;&#20197;&#19979;&#22836;&#22343;&#25351;&#36820;&#22238;&#32473;&#27983;&#35272;&#22120;&#30340;&#21709;&#24212;&#22836;&#65281;&lt;/p&gt;
&lt;p&gt;last-modify  &#21578;&#35785;&#27983;&#35272;&#22120;&#27492;&#25991;&#20214;&#30340;&#26368;&#21518;&#20462;&#25913;&#26102;&#38388;&#65292;&#27983;&#35272;&#22120;&#22312;&#19979;&#27425;&#35775;&#38382;&#21516;&#26679;&#25991;&#20214;&#26102;&#20250;&#24102;&#19978;&#36825;&#20010;&#20462;&#25913;&#26102;&#38388;&#65292;&#26381;&#21153;&#22120;&#22312;&#25910;&#21040;&#35831;&#27714;&#21518;&#27604;&#36739;&#65292;&#22914;&#26524;&#26080;&#21464;&#21270;&#21017;&#30452;&#25509;&#36820;&#22238;304&#21578;&#35785;&#27983;&#35272;&#22120;&#20869;&#23481;&#26080;&#21464;&#21270;&#65292;&#20351;&#29992;&#33258;&#24049;&#26412;&#22320;&#32531;&#23384;&#21363;&#21487;&#65292;&#36890;&#24120;web&#26381;&#21153;&#22120;&#37117;&#20250;&#33258;&#21160;&#20026;&#38745;&#24577;&#35831;&#27714;&#36820;&#22238;&#36825;&#20010;&#22836;!  &lt;/p&gt;
&lt;p&gt;etag  &#29992;&#22788;&#20197;&#21450;&#31639;&#27861;&#22522;&#26412;&#21644;last-modify&#19968;&#26679;&#65292;&#21482;&#26159;&#20026;&#20102;&#24357;&#34917;&#65292;&#24403;&#27983;&#35272;&#22120;&#21644;&#26381;&#21153;&#22120;&#38388;&#36890;&#36807;&#36127;&#36733;&#22343;&#34913;&#30001;&#22810;&#21488;&#26381;&#21153;&#22120;&#25552;&#20379;&#26381;&#21153;&#26102;&#65292;&#26377;&#21487;&#33021;&#21508;&#26381;&#21153;&#22120;&#26102;&#38388;&#24182;&#19981;&#33021;&#36798;&#21040;&#23436;&#20840;&#19968;&#33268;&#65292;&#23548;&#33268;last-modify&#22836;&#20869;&#23481;&#21487;&#33021;&#22833;&#25928;&#65281; &#36890;&#24120;&#26381;&#21153;&#22120;&#29992;etag&#26102;&#65292;&#23427;&#30340;&#20540;&#23601;&#26159;&#19968;&#20010;&#33021;&#21807;&#19968;&#26631;&#31034;&#25991;&#20214;&#25913;&#21160;&#65292;&#27604;&#22914;md5&#20540;&#65281;&lt;/p&gt;
&lt;p&gt;expires&#65306; &#26381;&#21153;&#22120;&#36820;&#22238;&#21709;&#24212;&#30340;&#26102;&#20505;&#65292;&#21253;&#21547;expires&#22836;&#65292;&#29992;&#26469;&#21578;&#35785;&#27983;&#35272;&#22120;&#65292;&#36825;&#20010;&#25991;&#20214;&#35831;&#27714;&#22312;&#22810;&#23569;&#26102;&#38388;&#20869;&#30452;&#25509;&#20351;&#29992;&#27983;&#35272;&#22120;&#26412;&#22320;&#32531;&#23384;&#65292;&#21482;&#35201;&#22312;&#27492;&#26102;&#38388;&#20869;&#65292;&#24403;&#27983;&#35272;&#22120;&#20877;&#27425;&#38656;&#35201;&#36825;&#20010;&#25991;&#20214;&#26102;&#65292;&#23558;&#30452;&#25509;&#20351;&#29992;&#26412;&#22320;&#25442;&#25104;&#65292;&#36830;http&#35831;&#27714;&#37117;&#30465;&#30053;&#20102;&#65292;&#30001;&#20110;&#27604;last-modify&#21644;etag&#23569;&#20102;http&#24314;&#31435;&#36830;&#25509;&#21644;&#21709;&#24212;&#30340;&#24320;&#38144;&#65292;&#25152;&#20197;&#26356;&#24555;&#12290;&lt;/p&gt;
&lt;p&gt;cache-control&#65306;  &#30001;&#20110;expires&#22836;&#23384;&#22312;&#19968;&#20010;&#38382;&#39064;&#65292;&#23601;&#26159;&#24403;&#26381;&#21153;&#22120;&#26102;&#38388;&#21644;pc&#26102;&#38388;&#30456;&#24046;&#65292;&#20551;&#22914;&#19968;&#20010;&#25991;&#20214;&#30340;expires&#26102;&#38388;&#26159;1&#23567;&#26102;&#65292;&#27492;&#26102;&#30896;&#24039;&#27983;&#35272;&#22120;&#26412;&#22320;&#26102;&#38388;&#27604;web&#26381;&#21153;&#22120;&#35201;&#24930;1&#23567;&#26102;&#65292;&#37027;&#23454;&#38469;&#19978;expires&#22836;&#26681;&#26412;&#36215;&#19981;&#21040;&#20316;&#29992;&#12290;&lt;/p&gt;
&lt;p&gt;&#25152;&#20197;http1.1&#21327;&#35758;&#65292;&#20551;&#22914;&#20102;cache-control&#22836;&#65292;&#20869;&#23481;&#26159;&#65306; cache-control: max-age=3600,  &#36825;&#26679;&#27983;&#35272;&#22120;&#23545;&#24453;&#25991;&#20214;&#32531;&#23384;&#26102;&#65292;&#20351;&#29992;&#30340;&#26159;&#30456;&#23545;&#26102;&#38388;&#12290;&#24357;&#34917;&#20102;expires&#22836;&#30340;&#38382;&#39064;.
&#23436;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-11-1-http-cache-header-resolve</guid><pubDate>Mon, 11 Mar 2013 19:33:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;zmq &#24322;&#27493;&#28040;&#24687;&#38431;&#21015;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-07-3-ZMQ-asynchronous-message-queue</link><description>&lt;h4&gt;zmq  push--pull &#26041;&#24335;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&#22312;ZMQ&#20013;&#26159;&#28129;&#21270;&#26381;&#21153;&#31471;&#21644;&#23458;&#25143;&#31471;&#30340;&#27010;&#24565;&#30340;&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#30456;&#23545;&#30340;&#26381;&#21153;&#31471;:&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;SUBer&#35746;&#38405;&#32773;bind&#19968;&#20010;&#31471;&#21475;, &#29992;&#26469;&#25509;&#25910;&#25968;&#25454;&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;zmq.PUSH&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;zmq poller&#36718;&#35810;&#23545;&#35937;,&lt;/li&gt;
&lt;li&gt;&#23558;sub&#27880;&#20876;&#21040;poller, &#24182;&#36171;&#20104;zmq.POLLIN&#24847;&#21619;&#36718;&#35810;&#36827;&#26469;&#30340;msg&lt;/li&gt;
&lt;li&gt;&#21019;&#24314;sock=poller.poll()&#24320;&#22987;&#36718;&#35810;&lt;/li&gt;
&lt;li&gt;&#24403;&#26377;msg&#21457;&#36865;&#21040;suber&#35746;&#38405;&#32773;&#30340;&#30417;&#21548;&#31471;&#21475;&#21518;, sock.recv()&#26041;&#27861;&#23558;&#20250;&#25910;&#21040;msg,&lt;/li&gt;
&lt;li&gt;&#26368;&#21518;&#20351;&#29992;&#20043;&#21069;&#21019;&#24314;&#30340;pusher, &#20351;&#29992;pusher.send(msg)&#23558;&#28040;&#24687;&#25512;&#36865;&#21040;&#36830;&#25509;&#21040;&#30340;puller, &#22914;&#26524;&#26080;puller, &#27492;msg&#23558;&#34987;&#20002;&#24323;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&#30456;&#23545;&#30340;client&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#21019;&#24314;zmq.PULL &#36830;&#25509;&#21040;&#26381;&#21153;&#31471;&#25509;&#25910;push&#36807;&#26469;&#30340;&#28040;&#24687;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&#28040;&#24687;&#21019;&#24314;&#32773;&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#21019;&#24314;&#19968;&#20010;zmq.PUB&#23545;&#35937;, &#24847;&#21619;&#30528;&#27492;&#23545;&#35937;&#20026;&#19968;&#20010;&#28040;&#24687;&#21457;&#24067;&#32773;: pub = context.socket(zmq.PUB)&lt;/li&gt;
&lt;li&gt;&#36830;&#25509;&#21040;&#26381;&#21153;&#31471;&#30340;suber&#30340;&#30417;&#21548;&#31471;&#21475;: pub.connect('tcp://%s:%s' % (sub_host, sub_port))&lt;/li&gt;
&lt;li&gt;&#26368;&#21518;&#23558;&#38656;&#35201;&#21457;&#36865;&#30340;msg, &#20351;&#29992;pub.send(msg)&#21457;&#36865;&#32473;suber&#35746;&#38405;&#32773;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&#20195;&#30721;&#31034;&#20363;:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&#23545;&#20110;&#26381;&#21153;&#31471;:
&lt;pre&gt;
&lt;code&gt;
import zmq
context = zmq.Context()&lt;/p&gt;
&lt;p&gt;"""&#23450;&#20041;&#19968;&#20010;&#35746;&#38405;&#32773;, &#27880;&#24847;&#30340;&#26159;,&#36825;&#37324;&#30340;&#35746;&#38405;&#32773;&#26159;&#20174;&#26381;&#21153;&#31471;&#26469;&#30475;, 
&#36825;&#20010;method&#26159;&#35746;&#38405;&#32773;(&#20174;&#36825;&#20010;&#35282;&#24230;&#26469;&#35828;&#26381;&#21153;&#31471;&#20063;&#33021;&#30475;&#25104;&#26159;&#23458;&#25143;&#31471;&#20102;), 
&#23545;&#24212;&#30340;client&#21019;&#24314;&#19968;&#20010;&#21457;&#24067;&#32773;(PUB)&#26102;, &#20351;&#29992;connect&#36830;&#25509;&#30340;&#23601;&#26159;&#27492;&#26381;&#21153;&#31471;&#30340;&#35746;&#38405;&#32773;."""
def create_subscriber(port):
    sub = context.socket(zmq.SUB)
    sub.bind('tcp://*:%s' % port)
    sub.setsockopt(zmq.SUBSCRIBE, '')
    return sub&lt;/p&gt;
&lt;p&gt;"""&#27492;&#27169;&#24335;&#22312;&#26381;&#21153;&#31471;&#26242;&#26102;&#27809;&#29992;&#29992;&#21040;"""
def create_publisher(port):
    pub = context.socket(zmq.PUB)
    pub.bind('tcp://*:%s' % port)
    pub.setsockopt(zmq.HWM, 0)
    return pub&lt;/p&gt;
&lt;p&gt;"""&#23450;&#20041;&#20010;&#25512;&#36865;&#32773;, &#22914;&#26524;&#26377;client&#36830;&#19978;&#27492;pusher, &#24403;&#26377;&#26032;&#28040;&#24687;&#26102;,
client&#30340;pull.recv()&#23558;&#20250;&#33719;&#24471;msg"""
def create_pusher(port):
    pusher = context.socket(zmq.PUSH)
    pusher.bind('tcp://*:%s' % port)
    return pusher&lt;/p&gt;
&lt;p&gt;def main():
    """&#21021;&#22987;&#21270;&#20989;&#25968;&#26041;&#27861;"""
    sub = create_subscriber(args.sub_port)
    pub = create_publisher(args.pub_port)
    pusher = create_pusher(args.push_port)&lt;/p&gt;
&lt;p&gt;""" &#21019;&#24314;&#19968;&#20010;Poller&#21021;&#22987;&#21270;&#65292; &#23558;sub(&#35746;&#38405;&#32773;)&#27880;&#20876;&#21040;&#27492;Poller, &#24182;&#20351;&#29992;POLLIN&#21442;&#25968;, 
&#22312;&#21518;&#38754;&#30340;poller.pull()&#26041;&#27861;&#20013;, &#23558;&#33021;pull&#21040;&#26368;&#26032;&#30340;,&#20174;client&#31243;&#24207;&#21457;&#21040;sub&#26469;&#30340;&#28040;&#24687;,
&#26368;&#21518;&#20351;&#29992;pub&#21644;pusher&#23558;&#28040;&#24687;send&#20986;&#21435;"""
    poller = zmq.Poller()
    poller.register(sub, zmq.POLLIN)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;while True:
    socks = poller.poll()  \# &#21019;&#24314;socks
    for k, v in socks:
       """ &#33719;&#21462;&#28040;&#24687;,&#27492;&#28040;&#24687;&#23454;&#38469;&#26159;&#30001;client&#31243;&#24207;&#30340;pub&#21457;&#36865;&#21040;&#27492;server&#30340;sub,
       &#28982;&#21518;&#32463;&#30001;poller.register, &#34987;poller.poll()&#23454;&#20363;&#32463;&#30001;recv&#26041;&#27861;&#33719;&#21462;"""
        message = k.recv()

        pub.send(message)
        # FIXME: Use gevent instead.
        try:
            \# &#20351;&#29992;pusher&#23558;msg&#25512;&#36865;&#32473;client&#31243;&#24207;&#30340;puller.recv, 
            pusher.send(message.split(' ', 1)[-1], zmq.NOBLOCK)
        except:
            pass
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&#23458;&#25143;&#31471;:&lt;/strong&gt;
&lt;pre&gt;
&lt;code&gt;
import zmq
context = zmq.Context()&lt;/p&gt;
&lt;p&gt;"""&#21019;&#24314;&#19968;&#20010;&#21457;&#24067;&#32773;, &#21457;&#24067;&#32773;&#36830;&#25509;&#21040;server&#31243;&#24207;&#30340;&#35746;&#38405;&#32773;, &#20135;&#29983;msg&#21518;send, 
&#20854;&#20182;&#35821;&#35328;&#27604;&#22914;cpp, &#20063;&#26159;&#19968;&#26679;&#36830;
&#25509;&#30340;&#26159;&#19978;&#38754;server&#31243;&#24207;&#30340;sub, &#21457;&#36865;mq"""
def pub():
    pub = context.socket(zmq.PUB)
    pub.connect('tcp://%s:%s' % (sub_host, sub_port))
    while True:
        msg = 'abc hello' + str(time.time())
        pub.send(msg)
        print 'sending', msg
        time.sleep(1)&lt;/p&gt;
&lt;p&gt;# &#26242;&#26102;&#27809;&#26377;&#29992;&#21040;, &#27492;&#20165;&#20316;&#31034;&#20363;
def sub():
    sub = context.socket(zmq.SUB)
    sub.setsockopt(zmq.SUBSCRIBE, '')
    sub.connect('tcp://%s:%s' % (pub_host, pub_port))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;while True:
    msg = sub.recv()
    print 'Got:', msg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"""&#21019;&#24314;&#19968;&#20010;puller, &#36830;&#25509;&#30340;&#26159;server&#31243;&#24207;&#20013;&#30340;pusher, server&#31471;pusher&#26377;&#26032;msg&#26102;, &#20250;push&#21040;&#27492;puller"""
def pull():
    pull = context.socket(zmq.PULL)
    pull.connect('tcp://%s:%s' % (pusher_host, pusher_port))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"""&#19968;&#20010;&#27515;&#24490;&#29615;, &#19981;&#26029;pull&#26032;msg, &#25509;&#25910;&#21040;msg&#21518;&#26681;&#25454;msg&#20877;&#36827;&#34892;&#30456;&#20851;&#19994;&#21153;&#36923;&#36753;,
&#19968;&#33324;msg&#37319;&#29992;json&#26684;&#24335;, &#33021;&#38750;&#24120;&#26041;&#20415;&#22788;&#29702;&#19981;&#33021;&#35821;&#35328;&#31243;&#24207;&#20043;&#38388;, &#19981;&#21516;&#36827;&#31243;&#20043;&#38388;&#30340;&#36890;&#20449;."""
while True:
    msg = pull.recv()
    print 'Got: ', msg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-07-3-ZMQ-asynchronous-message-queue</guid><pubDate>Thu, 07 Mar 2013 16:47:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;perf  sched  &#25910;&#38598;&#21644;&#20998;&#26512;&#35843;&#24230;&#30456;&#20851;&#25968;&#25454;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-07-2-perf-performance-tools</link><description>&lt;p&gt;1,&#36890;&#24120;&#29992;&#21040; perf sched  record  &#25910;&#38598;&#31995;&#32479;&#30456;&#20851;&#30340;&#35843;&#24230;&#25968;&#25454;, &#28982;&#21518;&#20351;&#29992;pert ached   latency  --sort max &#26469;&#25171;&#21360;&#20986;&#25910;&#38598;&#21040;&#30340;&#20449;&#24687;,perf sched  latency  --sort  max &#23637;&#29616;&#30340;&#25968;&#25454;&#20013;&#21508;&#20010;column&#30340;&#21547;&#20041;&#22914;&#19979;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Task: &#36827;&#31243;&#30340;&#21517;&#23383;&#21644; pid &lt;/li&gt;
&lt;li&gt;Runtime: &#23454;&#38469;&#36816;&#34892;&#26102;&#38388;&lt;/li&gt;
&lt;li&gt;Switches: &#36827;&#31243;&#20999;&#25442;&#30340;&#27425;&#25968;&lt;/li&gt;
&lt;li&gt;Average delay: &#24179;&#22343;&#30340;&#35843;&#24230;&#24310;&#36831;&lt;/li&gt;
&lt;li&gt;Maximum delay: &#26368;&#22823;&#24310;&#36831;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&#20854;&#20013;&#26368;&#20540;&#24471;&#20851;&#27880;&#30340;&#26159;Maxinum delay&#30340;&#25968;&#25454;&lt;/p&gt;
&lt;p&gt;2, perf sched reply ,  &#23427;&#35797;&#22270;&#37325;&#25918;pert.data&#25991;&#20214;&#20013;&#38145;&#35760;&#24405;&#30340;&#35843;&#24230;&#22330;&#26223;, pert.data&#25991;&#20214;&#26159;&#30001;&#19978;&#38754;&#30340;pert ached record&#31561;&#25910;&#38598;&#21629;&#20196;&#20135;&#29983;,  &#22914;&#26524;&#26159;&#20351;&#29992;pert  record&#20135;&#29983;&#30340;pert.data&#25991;&#20214;, &#37027;&#20040;&#20351;&#29992;pert  ached reply&#24182;&#26080;&#27861;&#20998;&#26512;&#20986;&#26377;&#29992;&#30340;&#25968;&#25454;.
&#19979;&#38754;&#26159;&#19968;&#27425;per  ached reply&#30340;&#32467;&#26524;:&lt;/p&gt;
&lt;pre&gt;\#perf sched reply 
run measurement overhead: 173 nsecs
sleep measurement overhead: 53289 nsecs
the run test took 999980 nsecs
the sleep test took 1123326 nsecs
nr_run_events:        33692
nr_sleep_events:      33910
nr_wakeup_events:     16719
target-less wakeups:  40
multi-target wakeups: 30
task      0 (             swapper:         0), nr_events: 38449
task      1 (            qemu-kvm:     21706), nr_events: 479
task      2 (            qemu-kvm:     21705), nr_events: 416
task      3 (            qemu-kvm:     17648), nr_events: 2464
task      4 (            qemu-kvm:     17640), nr_events: 2268
task      5 (         ksoftirqd/0:         4), nr_events: 70
task      6 (            qemu-kvm:     17645), nr_events: 2255
task      7 (            qemu-kvm:     17646), nr_events: 2050
task      8 (            qemu-kvm:     18320), nr_events: 1143
task      9 (            qemu-kvm:     18318), nr_events: 1420
task     10 (            qemu-kvm:     17647), nr_events: 2092
&lt;/pre&gt;

&lt;p&gt;&#20854;&#20013;task 0   swapper&#21344;&#20102;&#24456;&#22823;&#27604;&#20363;&#30340;event,  &#35828;&#26126;&#25105;&#30340;&#31995;&#32479;&#20013;&#22312;&#36827;&#34892;&#36739;&#22823;&#30340;&#20132;&#25442;&#20998;&#21306;&#20351;&#29992;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-07-2-perf-performance-tools</guid><pubDate>Thu, 07 Mar 2013 15:11:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;&#25346;&#36733;kvm&#38236;&#20687;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-03-07-1-mount-kvm-img</link><description>&lt;p&gt;kvm&#30340;guest&#38236;&#20687;&#21487;&#20197;mount&#21040;&#26412;&#22320;
&#39318;&#20808;&#20351;&#29992;qemu-img info  img_file&#26597;&#30475;&#38236;&#20687;&#20351;&#29992;&#30340;&#25991;&#20214;&#26684;&#24335;, &#36890;&#24120;&#40664;&#35748;&#30340;&#26159;raw  &lt;/p&gt;
&lt;pre&gt;
[root@ttt data]# qemu-img info vm1.img

image: vm1.img
file format: raw
virtual size: 20G (21474836480 bytes)
disk size: 11G  
&lt;/pre&gt;

&lt;p&gt;&#28982;&#21518;&#21487;&#20351;&#29992;fdisk&#26597;&#30475;guest&#20351;&#29992;&#27492;&#38236;&#20687;&#26102;&#30340;&#20998;&#21306;&#26041;&#24335;:  &lt;/p&gt;
&lt;pre&gt;[root@ttt data]# fdisk -ul vm1.img
You must set cylinders.
You can do this from the extra functions menu.

Disk vm1.img: 0 MB, 0 bytes
255 heads, 63 sectors/track, 0 cylinders, total 0 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x0008de38

  Device Boot      Start         End      Blocks   Id  System
vm1.img1            2048     8194047     4096000   82  Linux swap / Solaris
Partition 1 does not end on cylinder boundary.
vm1.img2   *     8194048    41943039    16874496   83  Linux
Partition 2 has different physical/logical endings:
     phys=(1023, 254, 63) logical=(2610, 212, 34)
&lt;/pre&gt;

&lt;p&gt;&#22914;&#26524;&#26159;&#20856;&#22411;&#30340;raw&#26041;&#24335;, &#19988;guest&#20351;&#29992;&#30340;&#19981;&#26159;lvm&#30340;&#20998;&#21306;&#31649;&#29702;&#26041;&#24335;,&#37027;&#26041;&#24335;&#24456;&#31616;&#21333;:
&lt;pre&gt;
losetup /dev/loop0 image.img
kpartx -a /dev/loop0mount /dev/mapper/loop0p1 /mnt/image
&lt;/pre&gt;
&#36825;&#26679;&#23601;&#23436;&#25104;&#20102;mount&#21040;&#26412;&#22320;&#30340;&#30446;&#30340;.&lt;/p&gt;
&lt;p&gt;&#20197;&#19979;&#36164;&#26009;&#26159;&#24403;img&#26159;qcow2&#25110;&#36825;kvm&#30340;guest&#20351;&#29992;&#30340;lvm&#36923;&#36753;&#21367;&#31649;&#29702;&#26041;&#24335;&#26102;, &#22914;&#20309;mount&#38236;&#20687;&#21040;&#26412;&#22320;&#30340;&#26041;&#27861;:&lt;/p&gt;
&lt;pre&gt;
Mounting a partition from raw image is pretty simple:

losetup /dev/loop0 image.img
kpartx -a /dev/loop0
mount /dev/mapper/loop0p1 /mnt/image
If kernel parameter (as loop in compiled into Fedora&#8217;s kernel) like loop.max_part=63 added it is even simplier:
losetup /dev/loop0 image.img
mount /dev/loop0p1 /mnt/image
Alternative way is to specify direct offset to partition:
mount image.img /mnt/image -o loop,offset=32256

To mount qcow2 images there is (at least in F-11 qemu) very useful qemu-nbd util. It shares image through kernel network block device protocol and this allows to mount it:
modprobe nbd max_part=63
qemu-nbd -c /dev/nbd0 image.img
mount /dev/nbd0p1 /mnt/image

If LVM is present on image it could be initialized with:
vgscan
vgchange -ay
mount /dev/VolGroupName/LogVolName /mnt/image

Finishing is done with (depending on how it was initalized):
umount /mnt/image
vgchange -an VolGroupName
killall qemu-nbd
kpartx -d /dev/loop0
losetup -d /dev/loop0

Posted by Alexey Torkhov at 16:33
Labels: Fedora
&lt;/pre&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-03-07-1-mount-kvm-img</guid><pubDate>Thu, 07 Mar 2013 13:55:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;pptp&#20570;vpn, &#36830;&#25509;&#21040;&#20869;&#32593;&#30452;&#25509;&#33021;&#35775;&#38382;&#20869;&#32593;IP&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-19-1-pptp-vpn-iptables</link><description>&lt;p&gt;pptp&#26381;&#21153;&#22120;:&lt;/p&gt;
&lt;p&gt;pptp&#19979;&#21457;&#19979;&#21435;&#30340;ip&#32593;&#27573;: 10.168.0.0/24 &lt;/p&gt;
&lt;p&gt;iptables&#37197;&#32622;:  (&#27880;&#24847;&#25171;&#24320;ip_forward&#36716;&#21457;):
&lt;pre&gt;
-A FORWARD -s 10.168.0.0/24 -j ACCEPT
-A POSTROUTING -s 10.168.0.0/24 -j MASQUERADE 
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&#22686;&#21152;&#19968;&#26465;&#36335;&#30001;, &#23558;&#35775;&#38382;&#20869;&#32593;172.16.8.0/24&#30340;&#36716;&#21457;&#21040; &#20869;&#32593;&#19968;&#21488;&#24050;&#25320;pptp&#21040;&#26381;&#21153;&#22120;&#19978;&#30340;&#19968;&#20010;IP10.168.0.234:    &lt;/p&gt;
&lt;p&gt;&lt;code&gt;route add -net 172.16.8.0/24 gw 10.168.0.234&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&#22312;&#20869;&#32593;&#36825;&#21488;10.168.0.234&#30340;&#26381;&#21153;&#22120;&#19978;, &#23384;&#22312;&#21478;&#22806;&#19968;&#20010;&#30495;&#27491;&#30340;&#20869;&#32593;&#32593;&#21345;IP 172.16.8.213,&#22312;&#36825;&#20010;&#26381;&#21153;&#22120;&#19978;&#21551;&#21160;iptables, &#23558;&#23427;&#24403;&#36335;&#30001;&#22120;&#20351;&#29992;&#26469;&#36335;&#30001;&#32593;&#32476;&#35831;&#27714;&#21040;&#25972;&#20010;172.16.8.0/24&#30340;&#20869;&#32593;&#32593;&#27573;:&lt;/p&gt;
&lt;p&gt;&#21516;&#26679;&#30340;iptables&#37197;&#32622;:   (&#27880;&#24847;&#25171;&#24320;ip_forward&#36716;&#21457;)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-A FORWARD -s 10.168.0.0/24 -j ACCEPT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-A POSTROUTING -s 10.168.0.0/24 -j MASQUERADE&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&#22686;&#21152;&#19968;&#26465;route:
&lt;pre&gt;
route add -net 10.168.0.0/24  gw 10.168.0.1
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&#37197;&#32622;&#23436;&#25104;, &#19979;&#38754;&#26159;&#35841;&#24819;&#36890;&#36807;pptp&#30495;&#27491;&#36830;&#25509;&#21040;&#20869;&#32593;&#26102;, &#33258;&#24049;&#30340;&#37197;&#32622;&#26041;&#27861;:&lt;/p&gt;
&lt;p&gt;for linux:&lt;/p&gt;
&lt;p&gt;&#20351;&#29992;pptpsetup&#31243;&#24207;: 
&lt;pre&gt;
./pptpsetup --create test --server 180.153.136.14 --username test --password defage --encrypt --start
&lt;/pre&gt;
&#28982;&#21518;&#22686;&#21152;&#19968;&#26465;&#36335;&#30001;:&lt;/p&gt;
&lt;p&gt;route add -net 172.16.8.0/24 gw 10.168.0.1&lt;/p&gt;
&lt;p&gt;&#33509;&#38656;&#35201;&#35775;&#38382;&#20854;&#20182;pptp&#33410;&#28857;, &#39035;&#22686;&#21152;: route add -net 10.168.0.0/24 gw 10.168.0.1&lt;/p&gt;
&lt;p&gt;&#28982;&#21518;&#21487;&#20197;&#30452;&#25509;ping&#36890;&#20869;&#32593;&#30340;172.16.8.0/24&#20869;&#20219;&#24847;&#20027;&#26426;&#20102;.&lt;/p&gt;
&lt;h6&gt;for mac:&lt;/h6&gt;
&lt;p&gt;&#36830;&#25509;VPN&#21518;, &#25171;&#24320;&#31995;&#32479;&#20559;&#22909;&#35774;&#32622;==&amp;gt;&#32593;&#32476;&#35774;&#32622; ===&amp;gt; &#35774;&#23450;&#26381;&#21153;&#39034;&#24207;, &#23558;VPN&#25302;&#21040;&#26368;&#39640;&#24471;&#20301;&#32622;, &#34920;&#31034;&#32593;&#32476;&#23558;&#20248;&#20808;&#20351;&#29992;vpn&#36830;&#25509;.&lt;/p&gt;
&lt;h6&gt;for windows:&lt;/h6&gt;
&lt;p&gt;&#38480;&#21046;:&lt;/p&gt;
&lt;p&gt;&#30001;&#20110;180.153.136.14&#26381;&#21153;&#22120;&#30340;&#32593;&#20851; NAT&#23384;&#22312;&#38024;&#23545;pptp&#21327;&#35758;&#30340;&#23545;&#28857;&#38480;&#21046;,&#21333;&#20010;&#20986;&#21475;IP&#21482;&#33021;&#26377;&#19968;&#20010;client&#21487;&#20197;&#36830;&#25509;&#19978;180&#30340;VPN&#26381;&#21153;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-19-1-pptp-vpn-iptables</guid><pubDate>Tue, 19 Feb 2013 11:33:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;pg&#30340;backup&#21644;restore&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-18-3-postgresql-backup-restore</link><description>&lt;p&gt;&#26377;2&#31181;&#26041;&#24335;&#21487;&#20197;&#23454;&#29616;backup
1,&#20351;&#29992;wal backup&#30340;&#26041;&#24335;,&#37197;&#32622;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
wal_level = archive

archive_mode = on

archive_command = 'test ! -f /data/postgresql/arch/%f &amp;&amp; 

cp %p /data/postgresql/arch/%f'
\#archive_timeout = 600
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#37197;&#32622;&#21518;reload pgmaster&#36827;&#31243;, &#27492;&#26102;&#21487;&#20197;&#20351;&#29992;psql&#36830;&#25509;pg&#21518;&#25163;&#24037;&#36827;&#34892;:
select pg_start_backup('test');
select pg_stop_backup();
&#31995;&#32479;&#20250;&#23558;wal&#26085;&#24535;&#22791;&#20221;&#21040;&#37197;&#32622;&#25991;&#20214;&#25351;&#23450;&#30340;&#30446;&#24405;, &#21478;&#22806;&#30340;&#26041;&#24335;,&#21487;&#20197;&#33050;&#26412;&#21270;&#36825;&#20010;&#25805;&#20316;,&#21516;&#26102;&#23558;walbackup&#21518;&#30340;&#25991;&#20214;&#21387;&#32553;&#25171;&#21253;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
\#!/bin/sh

if [ "$1" == "" ]; then
    $0 backupname
    exit 1
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
mkdir -p /data/postgresql/arch
mkdir -p /data/postgresql/arch_gz

psql -Upostgres &lt;&lt; START_BACKUP_END
select pg_start_backup('$1');
\q
START_BACKUP_END

find /data/postgresql/arch/ -print | cpio -o -H crc | gzip -v &gt; /data/postgresql/arch_gz/$1.cpio.gz

psql  -Upostgres&lt;&lt; STOP_BACKUP_END
select pg_stop_backup();
\q
STOP_BACKUP_END
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#put backup file to ftp&lt;/p&gt;
&lt;p&gt;2, &#31532;2&#20010;&#26041;&#24335;&#26159;&#30452;&#25509;&#20351;&#29992;pg_dump&#21629;&#20196;&#36827;&#34892;
    pg_dump -Upostgres testdb &amp;gt; testdb.backup.sql&lt;/p&gt;
&lt;p&gt;&#20351;&#29992;wal backup&#30340;&#22791;&#20221;&#26041;&#24335;&#30340;&#20248;&#32570;&#28857;:&lt;/p&gt;
&lt;p&gt;Advantages:
Incremental, the WAL archives include everything necessary to restore the current state of the database
Almost no overhead, copying WAL files is cheap
You can restore the database at any point in time (this feature is called PITR, or point-in-time recovery)
Disadvantages:
More complicated to set up than pg_dump
The full backup will be much larger than a pg_dump because all internal table structures and indexes are included
Doesn't work work well for write-heavy databases, since recovery will take a long time.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-18-3-postgresql-backup-restore</guid><pubDate>Mon, 18 Feb 2013 18:40:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;flame graph&#21487;&#35270;&#21270;&#20998;&#26512;&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-18-2-flame_graph</link><description>&lt;p&gt;FlameGraph&#30340;&#20363;&#22270;,&#35299;&#37322;&#22914;&#19979;:&lt;/p&gt;
&lt;p&gt;&#22270;&#20013;&#27599;&#19968;&#20010;&#26041;&#22359;&#20195;&#34920;&#26632;&#37324;&#30340;&#19968;&#20010;&#20989;&#25968;&#12290;
Y&#36724;&#20195;&#34920;&#35843;&#29992;&#28145;&#24230;&#65292;&#26368;&#19978;&#38754;&#30340;&#26159;&#24403;&#21069;&#27491;&#22312;CPU&#19978;&#25191;&#34892;&#30340;&#20989;&#25968;&#65292;&#19979;&#38754;&#30340;&#37117;&#26159;&#20854;&#31062;&#20808;&#12290;&#27599;&#20010;&#20989;&#25968;&#37117;&#26159;&#30001;&#23427;&#19979;&#26041;&#30340;&#20989;&#25968;&#35843;&#29992;&#30340;&#12290;
X&#36724;&#19981;&#26159;&#25353;&#29031;&#26102;&#38388;&#20808;&#21518;&#25490;&#21015;&#30340;&#65292;&#23427;&#21482;&#20195;&#34920;&#26679;&#26412;&#25968;&#30446;&#12290;&#26041;&#22359;&#36234;&#23485;&#65292;&#20195;&#34920;&#35813;&#20989;&#25968;&#20986;&#29616;&#30340;&#27425;&#25968;&#36234;&#22810;&#12290;
&#22312;&#26377;&#22810;&#20010;&#24182;&#21457;&#32447;&#31243;&#21516;&#26102;&#34987;&#37319;&#26679;&#65292;&#26679;&#26412;&#24635;&#25968;&#21487;&#33021;&#36229;&#36807;&#37319;&#26679;&#25152;&#29992;&#30340;&#26102;&#38388;&#12290;&lt;/p&gt;
&lt;p&gt;&#37197;&#21512;perf&#20351;&#29992;&#30340;&#26041;&#27861;,&#20998;3&#27493;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;perf record -a -g -F 1000 sleep 60&lt;/p&gt;
&lt;p&gt;perf script | ./stackcollapse-perf.pl &amp;gt; out.perf-folded&lt;/p&gt;
&lt;p&gt;cat out.perf-folded | ./flamegraph.pl &amp;gt; perf-kernel.svg&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;perf record&#26159;&#20351;&#29992;perf&#24037;&#20855;&#37319;&#26679;, -a&#21442;&#25968;&#34920;&#31034;&#23545;&#25972;&#20010;&#31995;&#32479;&#37319;&#26679;,&#22914;&#26524;&#24076;&#26395;&#21482;&#37319;&#26679;&#25351;&#23450;&#36827;&#31243;, &#37027;&#20040;&#21487;&#20197;&#20351;&#29992;-p &#21442;&#25968;&#21518;&#36319;PID
-g&#34920;&#31034;&#35760;&#24405;&#20989;&#25968;&#35843;&#29992;&#26719;, -F&#34920;&#31034;&#37319;&#26679;&#39057;&#29575;, &#26368;&#21518;&#30340;sleep 60&#34920;&#31034;&#37319;&#26679;60&#31186;&#21518;&#36864;&#20986;&#28982;&#21518;&#29983;&#25104;perf.data&#25991;&#20214;&lt;/p&gt;
&lt;p&gt;perf script &#34920;&#31034; Read perf.data (created by perf record) and display trace output 
&#36825;&#20123;&#20174;perf --help&#20013;&#37117;&#33021;&#30475;&#21040;&#24110;&#21161;&#20449;&#24687;&lt;/p&gt;
&lt;p&gt;&#26368;&#21518;&#19968;&#27493;&#26159;&#20351;&#29992;flamergraph.pl&#29983;&#25104;svg&#22270;&#29255;&lt;/p&gt;
&lt;p&gt;perf&#24037;&#20855;&#38750;&#24120;&#26041;&#20415;, &#19978;&#36848;&#21482;&#26159;&#20026;&#20102;&#20135;&#29983;&#22270;&#29255;&#24418;&#24335;&#30340;&#21033;&#20110;&#30452;&#35266;, &#21363;&#20351;&#27809;&#26377;flamegraph, &#21482;&#29992;perf&#20063;&#19968;&#26679;&#33021;&#26041;&#20415;&#30475;&#21040;&#32479;&#35745;&#25968;&#25454;:&lt;/p&gt;
&lt;p&gt;perf record&#20043;&#21518;,  &#20351;&#29992;perf report &#21363;&#21487;&#26597;&#30475;&#25191;&#34892;record&#26102;&#29983;&#25104;&#30340;&#32479;&#35745;&#25968;&#25454;&#20102;,&#30456;&#23545;&#30452;&#25509;vim&#26597;&#30475;&#32479;&#35745;&#25968;&#25454;&#20063;&#26102;&#27604;&#36739;&#30452;&#35266;&#30340;.&lt;/p&gt;
&lt;p&gt;&#20854;&#20013;&#36824;&#26377;pert top  , perf stat&#31561;, pert top&#33021;&#23454;&#26045;&#30340;&#32479;&#35745;&#25968;&#25454;&#24182;&#20197;top&#30340;&#24418;&#24335;&#23637;&#29616;.&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-18-2-flame_graph</guid><pubDate>Mon, 18 Feb 2013 17:29:00 GMT</pubDate></item><item><title>&lt;h3&gt;&lt;font color="green"&gt;test&lt;/font&gt;&lt;/h3&gt;</title><link>http://bb.yyu.me/article/2013-02-18-1-test-color-markdown</link><description>&lt;h1&gt;&lt;font color="green"&gt; &#27979;&#35797;markdown&#25991;&#23383;&#39068;&#33394; &lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&#24456;&#26126;&#26174;&#39068;&#33394;&#19981;&#38169;&#30340;&#22043;&lt;/p&gt;
&lt;p&gt;&#20877;&#26469;&#19968;&#20010;&#29031;&#29255;&#21543;:
&lt;a href="http://www.flickr.com/photos/liutaihua/8038608038/" title="Flickr &#19978; &#39118;&#30340;&#23614;&#24052; &#30340; line 10"&gt;&lt;img src="http://farm9.staticflickr.com/8318/8038608038_5f9875a147.jpg" width="500" height="276" alt="line 10"&gt;&lt;/a&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://bb.yyu.me/article/2013-02-18-1-test-color-markdown</guid><pubDate>Tue, 24 Jan 2012 22:55:00 GMT</pubDate></item></channel></rss>